{"ast":null,"code":"import _slicedToArray from\"C:/Users/MONK/Desktop/Pro/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from\"react\";import{Link}from\"react-router-dom\";import ExamplesNavbar2 from\"components/Navbars/ExamplesNavbar2.js\";import{useState}from'react';import Axios from'axios';import{Typography,Button,Form,Input}from'antd';var TextArea=Input.TextArea;var Tokens=[{key:1,value:\"Africa\"},{key:2,value:\"Asia\"},{key:3,value:\"America\"},{key:4,value:\"Europe\"},{key:5,value:\"Austrailia\"},{key:6,value:\"North America\"},{key:7,value:\"South America\"}];function RegisterOld(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),Title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),Description=_useState4[0],setDescription=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),Price=_useState6[0],setPrice=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),Token=_useState8[0],setToken=_useState8[1];//드롭박스\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),Images=_useState10[0],setImages=_useState10[1];var titleChangeHandler=event=>{setTitle(event.currentTarget.value);};var descriptionChangeHandler=event=>{setDescription(event.currentTarget.value);};var priceChangeHandler=event=>{setPrice(event.currentTarget.value);};var tokenChangeHandler=event=>{setToken(event.currentTarget.value);};var updateImages=newImages=>{setImages(newImages);};var submitHandler=event=>{// preventDefault를 해줘야 확인 버튼을 눌렀을때\n// 화면이 새로고침되지 않는다.\nevent.preventDefault();//모든 입력칸이 채워지지않으면 submit할 수없게 조건문\nif(!Title||!Description||!Price||!Token||!Images){return alert(\"모든 값을 넣어주세요\");}//서버에 채운 값을 request로 보낸다.\n//axious post를 하면 body를 적어줘야함\nvar body={//로그인된 사람의 ID를 가져오기위해 \ntitle:Title,description:Description,price:Price,images:Images,tokens:Tokens};//서버로 보내기\nAxios.post(\"/api/products\",body).then(response=>{if(response.data.success){alert('상품 업로드에 성공 했습니다.');//상품업로드 후 랜딩페이지로 돌아감\nprops.history.push('/');}else{alert('상품 업로드에 실패 했습니다.');}});};return/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'700px',margin:'2rem auto'},children:[/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginBottom:'2rem'},children:/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC5EC\\uD589 \\uC0C1\\uD488 \\uC5C5\\uB85C\\uB4DC\"})}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uC774\\uB984\"}),/*#__PURE__*/_jsx(Input,{onChange:titleChangeHandler,value:Title}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uC124\\uBA85\"}),/*#__PURE__*/_jsx(TextArea,{onChange:descriptionChangeHandler,value:Description}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uAC00\\uACA9($)\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",onChange:priceChangeHandler,value:Price}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"select\",{onChange:tokenChangeHandler,value:Token,children:Tokens.map(item=>/*#__PURE__*/_jsx(\"option\",{value:item.key,children:item.value},item.key))}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{type:\"submit\",onClick:submitHandler,children:\"\\uD655\\uC778\"})]})]});}export default RegisterOld;","map":{"version":3,"sources":["C:/Users/MONK/Desktop/Pro/client/src/views/examples/RegisterOld.js"],"names":["React","Link","ExamplesNavbar2","useState","Axios","Typography","Button","Form","Input","TextArea","Tokens","key","value","RegisterOld","props","Title","setTitle","Description","setDescription","Price","setPrice","Token","setToken","Images","setImages","titleChangeHandler","event","currentTarget","descriptionChangeHandler","priceChangeHandler","tokenChangeHandler","updateImages","newImages","submitHandler","preventDefault","alert","body","title","description","price","images","tokens","post","then","response","data","success","history","push","maxWidth","margin","textAlign","marginBottom","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExamplesNavbar2 from \"components/Navbars/ExamplesNavbar2.js\";\r\nimport { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport {Typography, Button, Form, Input} from 'antd';\r\n\r\n\r\n\r\nconst {TextArea} =Input;\r\n\r\nconst Tokens= [\r\n  {key:1, value:\"Africa\"},\r\n  {key:2, value:\"Asia\"},\r\n  {key:3, value:\"America\"},\r\n  {key:4, value:\"Europe\"},\r\n  {key:5, value:\"Austrailia\"},\r\n  {key:6, value:\"North America\"},\r\n  {key:7, value:\"South America\"},\r\n\r\n]\r\n\r\n\r\nfunction RegisterOld(props){\r\n  const [Title, setTitle] = useState(\"\")\r\n  const [Description, setDescription] = useState(\"\")\r\n  const [Price, setPrice] =  useState(0)\r\n  const [Token, setToken] = useState(1) //드롭박스\r\n  const [ Images, setImages] = useState([])\r\n\r\n  const titleChangeHandler = (event) => {\r\n\r\n    setTitle(event.currentTarget.value)\r\n\r\n}\r\n\r\nconst descriptionChangeHandler = (event) => {\r\n\r\n    setDescription(event.currentTarget.value)\r\n\r\n}\r\n\r\nconst priceChangeHandler = (event) => {\r\n\r\n    setPrice(event.currentTarget.value)\r\n\r\n}\r\n\r\nconst  tokenChangeHandler = (event) => {\r\n\r\n    setToken(event.currentTarget.value)\r\n\r\n}\r\n\r\nconst updateImages = (newImages) => {\r\n     \r\n    setImages(newImages)\r\n\r\n\r\n}\r\n\r\nconst submitHandler = (event) =>{\r\n    // preventDefault를 해줘야 확인 버튼을 눌렀을때\r\n    // 화면이 새로고침되지 않는다.\r\n    event.preventDefault();\r\n\r\n\r\n    //모든 입력칸이 채워지지않으면 submit할 수없게 조건문\r\n    if(!Title || !Description || !Price || !Token || !Images){\r\n        return alert(\"모든 값을 넣어주세요\")\r\n    }\r\n\r\n\r\n    //서버에 채운 값을 request로 보낸다.\r\n    //axious post를 하면 body를 적어줘야함\r\n    const body = {\r\n        //로그인된 사람의 ID를 가져오기위해 \r\n        \r\n        title:Title,\r\n        description:Description,\r\n        price:Price,\r\n        images:Images,\r\n        tokens: Tokens\r\n    }\r\n\r\n     //서버로 보내기\r\n    Axios.post(\"/api/products\", body)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                alert('상품 업로드에 성공 했습니다.')\r\n                //상품업로드 후 랜딩페이지로 돌아감\r\n                props.history.push('/')\r\n            }else{\r\n                alert('상품 업로드에 실패 했습니다.')\r\n            }\r\n        })\r\n\r\n}\r\n\r\nreturn(\r\n  <div style={{ maxWidth: '700px', margin: '2rem auto'}}>\r\n      <div style={{ textAlign:'center', marginBottom:'2rem'}}>\r\n          <h2>여행 상품 업로드</h2>\r\n      </div>\r\n\r\n\r\n     <Form onSubmit={submitHandler}>\r\n         {/* DropZone */}\r\n         \r\n\r\n         <br/>\r\n         <br/>\r\n         <label>이름</label>\r\n         <Input onChange={titleChangeHandler} value={Title}/>\r\n         <br/>\r\n         <br/>\r\n         <label>설명</label>\r\n         <TextArea onChange={descriptionChangeHandler} value={Description}/>\r\n         <br/>\r\n         <br/>\r\n         <label>가격($)</label>\r\n         <Input type=\"number\" onChange={priceChangeHandler} value={Price}/>\r\n         <br/>\r\n         <br/>\r\n         <select onChange={tokenChangeHandler} value={Token}>\r\n             {Tokens.map(item =>(\r\n                   <option key={item.key} value={item.key}>{item.value}</option>\r\n             ))}\r\n         </select>\r\n         <br/>\r\n         <br/>\r\n         \r\n         <Button type=\"submit\"onClick={submitHandler}>\r\n             확인\r\n         </Button>\r\n     </Form>\r\n  </div>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default RegisterOld;"]},"metadata":{},"sourceType":"module"}