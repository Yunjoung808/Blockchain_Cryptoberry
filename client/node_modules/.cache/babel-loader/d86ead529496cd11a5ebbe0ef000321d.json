{"ast":null,"code":"/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * Should be called to check the parameters of transaction\n *\n * @method validateParams\n * @param {Object}\n * @return {Error}\n */\nvar utils = require('../../caver-utils');\n\nfunction validateParams(tx) {\n  var error; // validate for fee payer transaction format\n\n  if (tx.senderRawTransaction) {\n    if (!tx.feePayer || tx.feePayer === '0x') {\n      error = new Error(\"Invalid fee payer: \".concat(tx.feePayer));\n    } else if (!utils.isAddress(tx.feePayer)) {\n      error = new Error(\"Invalid address of fee payer: \".concat(tx.feePayer));\n    }\n\n    return error;\n  }\n\n  var isValidateType = validateTxType(tx.type);\n\n  if (!isValidateType) {\n    return new Error(\"The transaction type [\".concat(tx.type, \"] is not supported\"));\n  }\n\n  error = validateTxObjectWithType(tx);\n\n  if (error !== undefined) {\n    return error;\n  }\n\n  if (!tx.from) {\n    error = new Error('\"from\" is missing');\n  } else if (!utils.isAddress(tx.from)) {\n    error = new Error(\"Invalid address of from: \".concat(tx.from));\n  } else if (tx.gas === undefined && tx.gasLimit === undefined) {\n    error = new Error('\"gas\" is missing');\n  } else if (tx.nonce < 0 || tx.gas < 0 || tx.gasPrice < 0 || tx.chainId < 0) {\n    error = new Error('gas, gasPrice, nonce or chainId is lower than 0');\n  } // If feePayerSignatures is set in transaction object, feePayer also should be defined together.\n\n\n  if (tx.feePayerSignatures && !utils.isEmptySig(tx.feePayerSignatures)) {\n    if (!tx.feePayer || tx.feePayer === '0x') {\n      error = new Error('\"feePayer\" is missing: feePayer must be defined with feePayerSignatures.');\n    } else if (!utils.isAddress(tx.feePayer)) {\n      error = new Error(\"Invalid address of fee payer: \".concat(tx.feePayer));\n    }\n  }\n\n  return error;\n}\n/**\n * Should be called to check the type of transaction\n * Transaction type has to be checked if type is set.\n *\n * @method validateTypes\n * @param {string}\n * @return {bool}\n */\n\n\nfunction validateTxType(txType) {\n  if (!txType) {\n    return true;\n  }\n\n  switch (txType) {\n    case 'VALUE_TRANSFER':\n    case 'FEE_DELEGATED_VALUE_TRANSFER':\n    case 'FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO':\n    case 'VALUE_TRANSFER_MEMO':\n    case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO':\n    case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO':\n    case 'ACCOUNT_UPDATE':\n    case 'FEE_DELEGATED_ACCOUNT_UPDATE':\n    case 'FEE_DELEGATED_ACCOUNT_UPDATE_WITH_RATIO':\n    case 'SMART_CONTRACT_DEPLOY':\n    case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY':\n    case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO':\n    case 'SMART_CONTRACT_EXECUTION':\n    case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION':\n    case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO':\n    case 'CANCEL':\n    case 'FEE_DELEGATED_CANCEL':\n    case 'FEE_DELEGATED_CANCEL_WITH_RATIO':\n    case 'CHAIN_DATA_ANCHORING':\n    case 'LEGACY':\n      return true;\n  }\n\n  return false;\n}\n/**\n * Should be called to check codeFormat\n *\n * @method validateTypes\n * @param {string}\n * @return {bool}\n */\n\n\nfunction validateCodeFormat(cf) {\n  if (cf === undefined) {\n    return true;\n  }\n\n  switch (cf) {\n    case 0:\n    case 'EVM':\n    case '0x':\n    case '0x0':\n      return true;\n  }\n\n  return false;\n}\n\nfunction validateTxObjectWithType(tx) {\n  if (tx.type === undefined) {\n    return validateLegacy(tx);\n  }\n\n  switch (tx.type) {\n    case 'LEGACY':\n      return validateLegacy(tx);\n\n    case 'VALUE_TRANSFER':\n      return validateValueTransfer(tx);\n\n    case 'FEE_DELEGATED_VALUE_TRANSFER':\n      return validateFeeDelegatedValueTransfer(tx);\n\n    case 'FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO':\n      return validateFeeDelegatedValueTransferWithRatio(tx);\n\n    case 'VALUE_TRANSFER_MEMO':\n      return validateValueTransferMemo(tx);\n\n    case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO':\n      return validateFeeDelegatedValueTransferMemo(tx);\n\n    case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO':\n      return validateFeeDelegatedValueTransferMemoWithRatio(tx);\n\n    case 'ACCOUNT_UPDATE':\n      return validateAccountUpdate(tx);\n\n    case 'FEE_DELEGATED_ACCOUNT_UPDATE':\n      return validateFeeDelegatedAccountUpdate(tx);\n\n    case 'FEE_DELEGATED_ACCOUNT_UPDATE_WITH_RATIO':\n      return validateFeeDelegatedAccountUpdateWithRatio(tx);\n\n    case 'SMART_CONTRACT_DEPLOY':\n      return validateSmartContractDeploy(tx);\n\n    case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY':\n      return validateFeeDelegatedSmartContractDeploy(tx);\n\n    case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO':\n      return validateFeeDelegatedSmartContractDeployWithRatio(tx);\n\n    case 'SMART_CONTRACT_EXECUTION':\n      return validateSmartContractExecution(tx);\n\n    case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION':\n      return validateFeeDelegatedSmartContractExecution(tx);\n\n    case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO':\n      return validateFeeDelegatedSmartContractExecutionWithRatio(tx);\n\n    case 'CANCEL':\n      return validateCancel(tx);\n\n    case 'FEE_DELEGATED_CANCEL':\n      return validateFeeDelegatedCancel(tx);\n\n    case 'FEE_DELEGATED_CANCEL_WITH_RATIO':\n      return validateFeeDelegatedCancelWithRatio(tx);\n  }\n\n  return undefined;\n}\n\nfunction validateLegacy(transaction) {\n  if (transaction.to === undefined && transaction.data === undefined) {\n    return new Error('contract creation without any data provided');\n  }\n\n  if (transaction.to && transaction.to !== '0x' && !utils.isAddress(transaction.to)) {\n    return new Error(\"Invalid address of to: \".concat(transaction.to));\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error('\"codeFormat\" cannot be used with LEGACY transaction');\n  }\n\n  var error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateNonFeeDelegated(transaction) {\n  var type = transaction.type ? transaction.type : 'LEGACY';\n\n  if (transaction.feePayer !== undefined) {\n    return new Error(\"\\\"feePayer\\\" cannot be used with \".concat(type, \" transaction\"));\n  }\n\n  if (transaction.feeRatio !== undefined) {\n    return new Error(\"\\\"feeRatio\\\" cannot be used with \".concat(type, \" transaction\"));\n  }\n\n  if (transaction.feePayerSignatures !== undefined) {\n    return new Error(\"\\\"feePayerSignatures\\\" cannot be used with \".concat(type, \" transaction\"));\n  }\n}\n\nfunction validateFeeDelegated(transaction) {\n  if (transaction.type.includes('WITH_RATIO')) {\n    if (transaction.feeRatio === undefined) {\n      return new Error('\"feeRatio\" is missing');\n    }\n  } else if (transaction.feeRatio !== undefined) {\n    return new Error(\"\\\"feeRatio\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n}\n\nfunction validateNotAccountTransaction(transaction) {\n  var type = transaction.type ? transaction.type : 'LEGACY';\n\n  if (transaction.key !== undefined) {\n    return new Error(\"\\\"key\\\" cannot be used with \".concat(type, \" transaction\"));\n  }\n\n  if (transaction.legacyKey !== undefined) {\n    return new Error(\"\\\"legacyKey\\\" cannot be used with \".concat(type, \" transaction\"));\n  }\n\n  if (transaction.publicKey !== undefined) {\n    return new Error(\"\\\"publicKey\\\" cannot be used with \".concat(type, \" transaction\"));\n  }\n\n  if (transaction.multisig !== undefined) {\n    return new Error(\"\\\"multisig\\\" cannot be used with \".concat(type, \" transaction\"));\n  }\n\n  if (transaction.roleTransactionKey !== undefined) {\n    return new Error(\"\\\"roleTransactionKey\\\" cannot be used with \".concat(type, \" transaction\"));\n  }\n\n  if (transaction.roleAccountUpdateKey !== undefined) {\n    return new Error(\"\\\"roleAccountUpdateKey\\\" cannot be used with \".concat(type, \" transaction\"));\n  }\n\n  if (transaction.roleFeePayerKey !== undefined) {\n    return new Error(\"\\\"roleFeePayerKey\\\" cannot be used with \".concat(type, \" transaction\"));\n  }\n\n  if (transaction.failKey !== undefined) {\n    return new Error(\"\\\"failKey\\\" cannot be used with \".concat(type, \" transaction\"));\n  }\n}\n\nfunction checkValueTransferEssential(transaction) {\n  if (transaction.to === undefined) {\n    return new Error('\"to\" is missing');\n  }\n\n  if (!utils.isAddress(transaction.to)) {\n    return new Error(\"Invalid address of to: \".concat(transaction.to));\n  }\n\n  if (transaction.value === undefined) {\n    return new Error('\"value\" is missing');\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(\"\\\"codeFormat\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n\n  if (transaction.data !== undefined) {\n    return new Error(\"\\\"data\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n}\n\nfunction validateValueTransfer(transaction) {\n  var error = checkValueTransferEssential(transaction);\n  if (error) return error;\n  error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedValueTransfer(transaction) {\n  var error = checkValueTransferEssential(transaction);\n  if (error) return error;\n  error = validateFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedValueTransferWithRatio(transaction) {\n  return validateFeeDelegatedValueTransfer(transaction);\n}\n\nfunction checkValueTransferMemoEssential(transaction) {\n  if (transaction.to === undefined) {\n    return new Error('\"to\" is missing');\n  }\n\n  if (!utils.isAddress(transaction.to)) {\n    return new Error(\"Invalid address of to: \".concat(transaction.to));\n  }\n\n  if (transaction.value === undefined) {\n    return new Error('\"value\" is missing');\n  }\n\n  if (transaction.data === undefined) {\n    return new Error('\"data\" is missing');\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(\"\\\"codeFormat\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n}\n\nfunction validateValueTransferMemo(transaction) {\n  var error = checkValueTransferMemoEssential(transaction);\n  if (error) return error;\n  error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedValueTransferMemo(transaction) {\n  var error = checkValueTransferMemoEssential(transaction);\n  if (error) return error;\n  error = validateFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedValueTransferMemoWithRatio(transaction) {\n  return validateFeeDelegatedValueTransferMemo(transaction);\n}\n\nfunction validateAccountTransaction(transaction) {\n  if (transaction.data !== undefined) {\n    return new Error(\"\\\"data\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(\"\\\"codeFormat\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n\n  if (!transaction.key && transaction.legacyKey === undefined && !transaction.publicKey && !transaction.multisig && !transaction.roleTransactionKey && !transaction.roleAccountUpdateKey && !transaction.roleFeePayerKey && transaction.failKey === undefined) {\n    return new Error(\"Missing key information with \".concat(transaction.type, \" transaction\"));\n  }\n\n  var duplicatedKeyInfo = \"The key parameter to be used for \".concat(transaction.type, \" is duplicated.\");\n\n  if (transaction.key) {\n    if (transaction.legacyKey !== undefined || transaction.publicKey || transaction.multisig || transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey || transaction.failKey !== undefined) {\n      return new Error(duplicatedKeyInfo);\n    }\n  } else if (transaction.legacyKey !== undefined) {\n    if (transaction.publicKey || transaction.multisig || transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey || transaction.failKey !== undefined) {\n      return new Error(duplicatedKeyInfo);\n    }\n  } else if (transaction.publicKey) {\n    if (transaction.multisig || transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey || transaction.failKey !== undefined) {\n      return new Error(duplicatedKeyInfo);\n    }\n  } else if (transaction.multisig) {\n    if (transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey || transaction.failKey !== undefined) {\n      return new Error(duplicatedKeyInfo);\n    }\n  } else if (transaction.failKey !== undefined) {\n    if (transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey) {\n      return new Error(duplicatedKeyInfo);\n    }\n  }\n}\n\nfunction checkUpdateEssential(transaction) {\n  if (transaction.to !== undefined) {\n    return new Error(\"\\\"to\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n\n  if (transaction.value !== undefined) {\n    return new Error(\"\\\"value\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n}\n\nfunction validateAccountUpdate(transaction) {\n  var error = checkUpdateEssential(transaction);\n  if (error) return error;\n  error = validateAccountTransaction(transaction);\n  if (error) return error;\n  return validateNonFeeDelegated(transaction);\n}\n\nfunction validateFeeDelegatedAccountUpdate(transaction) {\n  var error = checkUpdateEssential(transaction);\n  if (error) return error;\n  error = validateAccountTransaction(transaction);\n  if (error) return error;\n  return validateFeeDelegated(transaction);\n}\n\nfunction validateFeeDelegatedAccountUpdateWithRatio(transaction) {\n  return validateFeeDelegatedAccountUpdate(transaction);\n}\n\nfunction checkDeployEssential(transaction) {\n  if (transaction.value === undefined) {\n    return new Error('\"value\" is missing');\n  }\n\n  if (transaction.data === undefined) {\n    return new Error('\"data\" is missing');\n  }\n\n  if (transaction.to !== undefined && transaction.to !== '0x') {\n    return new Error(\"\\\"to\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n\n  if (transaction.codeFormat !== undefined && !validateCodeFormat(transaction.codeFormat)) {\n    return new Error(\"The codeFormat(\".concat(transaction.codeFormat, \") is invalid.\"));\n  }\n}\n\nfunction validateSmartContractDeploy(transaction) {\n  var error = checkDeployEssential(transaction);\n  if (error) return error;\n  error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedSmartContractDeploy(transaction) {\n  var error = checkDeployEssential(transaction);\n  if (error) return error;\n  error = validateNotAccountTransaction(transaction);\n  if (error) return error;\n  return validateFeeDelegated(transaction);\n}\n\nfunction validateFeeDelegatedSmartContractDeployWithRatio(transaction) {\n  return validateFeeDelegatedSmartContractDeploy(transaction);\n}\n\nfunction checkExecutionEssential(transaction) {\n  if (transaction.to === undefined) {\n    return new Error('\"to\" is missing');\n  }\n\n  if (!utils.isAddress(transaction.to)) {\n    return new Error(\"Invalid address of to: \".concat(transaction.to));\n  }\n\n  if (transaction.data === undefined) {\n    return new Error('\"data\" is missing');\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(\"\\\"codeFormat\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n}\n\nfunction validateSmartContractExecution(transaction) {\n  var error = checkExecutionEssential(transaction);\n  if (error) return error;\n  error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedSmartContractExecution(transaction) {\n  var error = checkExecutionEssential(transaction);\n  if (error) return error;\n  error = validateNotAccountTransaction(transaction);\n  if (error) return error;\n  return validateFeeDelegated(transaction);\n}\n\nfunction validateFeeDelegatedSmartContractExecutionWithRatio(transaction) {\n  return validateFeeDelegatedSmartContractExecution(transaction);\n}\n\nfunction checkCacncelEssential(transaction) {\n  if (transaction.to !== undefined) {\n    return new Error(\"\\\"to\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n\n  if (transaction.value !== undefined) {\n    return new Error(\"\\\"value\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n\n  if (transaction.data !== undefined) {\n    return new Error(\"\\\"data\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(\"\\\"codeFormat\\\" cannot be used with \".concat(transaction.type, \" transaction\"));\n  }\n}\n\nfunction validateCancel(transaction) {\n  var error = checkCacncelEssential(transaction);\n  if (error) return error;\n  error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedCancel(transaction) {\n  var error = checkCacncelEssential(transaction);\n  if (error) return error;\n  error = validateNotAccountTransaction(transaction);\n  if (error) return error;\n  return validateFeeDelegated(transaction);\n}\n\nfunction validateFeeDelegatedCancelWithRatio(transaction) {\n  return validateFeeDelegatedCancel(transaction);\n}\n\nmodule.exports = {\n  validateParams,\n  validateTxType,\n  validateCodeFormat\n};","map":{"version":3,"sources":["C:/Users/MONK/Desktop/Pro/client/node_modules/caver-js/packages/caver-core-helpers/src/validateFunction.js"],"names":["utils","require","validateParams","tx","error","senderRawTransaction","feePayer","Error","isAddress","isValidateType","validateTxType","type","validateTxObjectWithType","undefined","from","gas","gasLimit","nonce","gasPrice","chainId","feePayerSignatures","isEmptySig","txType","validateCodeFormat","cf","validateLegacy","validateValueTransfer","validateFeeDelegatedValueTransfer","validateFeeDelegatedValueTransferWithRatio","validateValueTransferMemo","validateFeeDelegatedValueTransferMemo","validateFeeDelegatedValueTransferMemoWithRatio","validateAccountUpdate","validateFeeDelegatedAccountUpdate","validateFeeDelegatedAccountUpdateWithRatio","validateSmartContractDeploy","validateFeeDelegatedSmartContractDeploy","validateFeeDelegatedSmartContractDeployWithRatio","validateSmartContractExecution","validateFeeDelegatedSmartContractExecution","validateFeeDelegatedSmartContractExecutionWithRatio","validateCancel","validateFeeDelegatedCancel","validateFeeDelegatedCancelWithRatio","transaction","to","data","codeFormat","validateNonFeeDelegated","validateNotAccountTransaction","feeRatio","validateFeeDelegated","includes","key","legacyKey","publicKey","multisig","roleTransactionKey","roleAccountUpdateKey","roleFeePayerKey","failKey","checkValueTransferEssential","value","checkValueTransferMemoEssential","validateAccountTransaction","duplicatedKeyInfo","checkUpdateEssential","checkDeployEssential","checkExecutionEssential","checkCacncelEssential","module","exports"],"mappings":"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","sourcesContent":["/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * Should be called to check the parameters of transaction\n *\n * @method validateParams\n * @param {Object}\n * @return {Error}\n */\n\nconst utils = require('../../caver-utils')\n\nfunction validateParams(tx) {\n    let error\n\n    // validate for fee payer transaction format\n    if (tx.senderRawTransaction) {\n        if (!tx.feePayer || tx.feePayer === '0x') {\n            error = new Error(`Invalid fee payer: ${tx.feePayer}`)\n        } else if (!utils.isAddress(tx.feePayer)) {\n            error = new Error(`Invalid address of fee payer: ${tx.feePayer}`)\n        }\n        return error\n    }\n\n    const isValidateType = validateTxType(tx.type)\n    if (!isValidateType) {\n        return new Error(`The transaction type [${tx.type}] is not supported`)\n    }\n\n    error = validateTxObjectWithType(tx)\n    if (error !== undefined) {\n        return error\n    }\n\n    if (!tx.from) {\n        error = new Error('\"from\" is missing')\n    } else if (!utils.isAddress(tx.from)) {\n        error = new Error(`Invalid address of from: ${tx.from}`)\n    } else if (tx.gas === undefined && tx.gasLimit === undefined) {\n        error = new Error('\"gas\" is missing')\n    } else if (tx.nonce < 0 || tx.gas < 0 || tx.gasPrice < 0 || tx.chainId < 0) {\n        error = new Error('gas, gasPrice, nonce or chainId is lower than 0')\n    }\n\n    // If feePayerSignatures is set in transaction object, feePayer also should be defined together.\n    if (tx.feePayerSignatures && !utils.isEmptySig(tx.feePayerSignatures)) {\n        if (!tx.feePayer || tx.feePayer === '0x') {\n            error = new Error('\"feePayer\" is missing: feePayer must be defined with feePayerSignatures.')\n        } else if (!utils.isAddress(tx.feePayer)) {\n            error = new Error(`Invalid address of fee payer: ${tx.feePayer}`)\n        }\n    }\n\n    return error\n}\n\n/**\n * Should be called to check the type of transaction\n * Transaction type has to be checked if type is set.\n *\n * @method validateTypes\n * @param {string}\n * @return {bool}\n */\nfunction validateTxType(txType) {\n    if (!txType) {\n        return true\n    }\n    switch (txType) {\n        case 'VALUE_TRANSFER':\n        case 'FEE_DELEGATED_VALUE_TRANSFER':\n        case 'FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO':\n        case 'VALUE_TRANSFER_MEMO':\n        case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO':\n        case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO':\n        case 'ACCOUNT_UPDATE':\n        case 'FEE_DELEGATED_ACCOUNT_UPDATE':\n        case 'FEE_DELEGATED_ACCOUNT_UPDATE_WITH_RATIO':\n        case 'SMART_CONTRACT_DEPLOY':\n        case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY':\n        case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO':\n        case 'SMART_CONTRACT_EXECUTION':\n        case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION':\n        case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO':\n        case 'CANCEL':\n        case 'FEE_DELEGATED_CANCEL':\n        case 'FEE_DELEGATED_CANCEL_WITH_RATIO':\n        case 'CHAIN_DATA_ANCHORING':\n        case 'LEGACY':\n            return true\n    }\n    return false\n}\n\n/**\n * Should be called to check codeFormat\n *\n * @method validateTypes\n * @param {string}\n * @return {bool}\n */\nfunction validateCodeFormat(cf) {\n    if (cf === undefined) {\n        return true\n    }\n\n    switch (cf) {\n        case 0:\n        case 'EVM':\n        case '0x':\n        case '0x0':\n            return true\n    }\n    return false\n}\n\nfunction validateTxObjectWithType(tx) {\n    if (tx.type === undefined) {\n        return validateLegacy(tx)\n    }\n    switch (tx.type) {\n        case 'LEGACY':\n            return validateLegacy(tx)\n        case 'VALUE_TRANSFER':\n            return validateValueTransfer(tx)\n        case 'FEE_DELEGATED_VALUE_TRANSFER':\n            return validateFeeDelegatedValueTransfer(tx)\n        case 'FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO':\n            return validateFeeDelegatedValueTransferWithRatio(tx)\n        case 'VALUE_TRANSFER_MEMO':\n            return validateValueTransferMemo(tx)\n        case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO':\n            return validateFeeDelegatedValueTransferMemo(tx)\n        case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO':\n            return validateFeeDelegatedValueTransferMemoWithRatio(tx)\n        case 'ACCOUNT_UPDATE':\n            return validateAccountUpdate(tx)\n        case 'FEE_DELEGATED_ACCOUNT_UPDATE':\n            return validateFeeDelegatedAccountUpdate(tx)\n        case 'FEE_DELEGATED_ACCOUNT_UPDATE_WITH_RATIO':\n            return validateFeeDelegatedAccountUpdateWithRatio(tx)\n        case 'SMART_CONTRACT_DEPLOY':\n            return validateSmartContractDeploy(tx)\n        case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY':\n            return validateFeeDelegatedSmartContractDeploy(tx)\n        case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO':\n            return validateFeeDelegatedSmartContractDeployWithRatio(tx)\n        case 'SMART_CONTRACT_EXECUTION':\n            return validateSmartContractExecution(tx)\n        case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION':\n            return validateFeeDelegatedSmartContractExecution(tx)\n        case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO':\n            return validateFeeDelegatedSmartContractExecutionWithRatio(tx)\n        case 'CANCEL':\n            return validateCancel(tx)\n        case 'FEE_DELEGATED_CANCEL':\n            return validateFeeDelegatedCancel(tx)\n        case 'FEE_DELEGATED_CANCEL_WITH_RATIO':\n            return validateFeeDelegatedCancelWithRatio(tx)\n    }\n    return undefined\n}\n\nfunction validateLegacy(transaction) {\n    if (transaction.to === undefined && transaction.data === undefined) {\n        return new Error('contract creation without any data provided')\n    }\n\n    if (transaction.to && transaction.to !== '0x' && !utils.isAddress(transaction.to)) {\n        return new Error(`Invalid address of to: ${transaction.to}`)\n    }\n\n    if (transaction.codeFormat !== undefined) {\n        return new Error('\"codeFormat\" cannot be used with LEGACY transaction')\n    }\n\n    const error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateNonFeeDelegated(transaction) {\n    const type = transaction.type ? transaction.type : 'LEGACY'\n    if (transaction.feePayer !== undefined) {\n        return new Error(`\"feePayer\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.feeRatio !== undefined) {\n        return new Error(`\"feeRatio\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.feePayerSignatures !== undefined) {\n        return new Error(`\"feePayerSignatures\" cannot be used with ${type} transaction`)\n    }\n}\n\nfunction validateFeeDelegated(transaction) {\n    if (transaction.type.includes('WITH_RATIO')) {\n        if (transaction.feeRatio === undefined) {\n            return new Error('\"feeRatio\" is missing')\n        }\n    } else if (transaction.feeRatio !== undefined) {\n        return new Error(`\"feeRatio\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateNotAccountTransaction(transaction) {\n    const type = transaction.type ? transaction.type : 'LEGACY'\n    if (transaction.key !== undefined) {\n        return new Error(`\"key\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.legacyKey !== undefined) {\n        return new Error(`\"legacyKey\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.publicKey !== undefined) {\n        return new Error(`\"publicKey\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.multisig !== undefined) {\n        return new Error(`\"multisig\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.roleTransactionKey !== undefined) {\n        return new Error(`\"roleTransactionKey\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.roleAccountUpdateKey !== undefined) {\n        return new Error(`\"roleAccountUpdateKey\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.roleFeePayerKey !== undefined) {\n        return new Error(`\"roleFeePayerKey\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.failKey !== undefined) {\n        return new Error(`\"failKey\" cannot be used with ${type} transaction`)\n    }\n}\n\nfunction checkValueTransferEssential(transaction) {\n    if (transaction.to === undefined) {\n        return new Error('\"to\" is missing')\n    }\n    if (!utils.isAddress(transaction.to)) {\n        return new Error(`Invalid address of to: ${transaction.to}`)\n    }\n    if (transaction.value === undefined) {\n        return new Error('\"value\" is missing')\n    }\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.data !== undefined) {\n        return new Error(`\"data\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateValueTransfer(transaction) {\n    let error = checkValueTransferEssential(transaction)\n    if (error) return error\n\n    error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedValueTransfer(transaction) {\n    let error = checkValueTransferEssential(transaction)\n    if (error) return error\n\n    error = validateFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedValueTransferWithRatio(transaction) {\n    return validateFeeDelegatedValueTransfer(transaction)\n}\n\nfunction checkValueTransferMemoEssential(transaction) {\n    if (transaction.to === undefined) {\n        return new Error('\"to\" is missing')\n    }\n    if (!utils.isAddress(transaction.to)) {\n        return new Error(`Invalid address of to: ${transaction.to}`)\n    }\n    if (transaction.value === undefined) {\n        return new Error('\"value\" is missing')\n    }\n    if (transaction.data === undefined) {\n        return new Error('\"data\" is missing')\n    }\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateValueTransferMemo(transaction) {\n    let error = checkValueTransferMemoEssential(transaction)\n    if (error) return error\n\n    error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedValueTransferMemo(transaction) {\n    let error = checkValueTransferMemoEssential(transaction)\n    if (error) return error\n\n    error = validateFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedValueTransferMemoWithRatio(transaction) {\n    return validateFeeDelegatedValueTransferMemo(transaction)\n}\n\nfunction validateAccountTransaction(transaction) {\n    if (transaction.data !== undefined) {\n        return new Error(`\"data\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n\n    if (\n        !transaction.key &&\n        transaction.legacyKey === undefined &&\n        !transaction.publicKey &&\n        !transaction.multisig &&\n        !transaction.roleTransactionKey &&\n        !transaction.roleAccountUpdateKey &&\n        !transaction.roleFeePayerKey &&\n        transaction.failKey === undefined\n    ) {\n        return new Error(`Missing key information with ${transaction.type} transaction`)\n    }\n\n    const duplicatedKeyInfo = `The key parameter to be used for ${transaction.type} is duplicated.`\n    if (transaction.key) {\n        if (\n            transaction.legacyKey !== undefined ||\n            transaction.publicKey ||\n            transaction.multisig ||\n            transaction.roleTransactionKey ||\n            transaction.roleAccountUpdateKey ||\n            transaction.roleFeePayerKey ||\n            transaction.failKey !== undefined\n        ) {\n            return new Error(duplicatedKeyInfo)\n        }\n    } else if (transaction.legacyKey !== undefined) {\n        if (\n            transaction.publicKey ||\n            transaction.multisig ||\n            transaction.roleTransactionKey ||\n            transaction.roleAccountUpdateKey ||\n            transaction.roleFeePayerKey ||\n            transaction.failKey !== undefined\n        ) {\n            return new Error(duplicatedKeyInfo)\n        }\n    } else if (transaction.publicKey) {\n        if (\n            transaction.multisig ||\n            transaction.roleTransactionKey ||\n            transaction.roleAccountUpdateKey ||\n            transaction.roleFeePayerKey ||\n            transaction.failKey !== undefined\n        ) {\n            return new Error(duplicatedKeyInfo)\n        }\n    } else if (transaction.multisig) {\n        if (\n            transaction.roleTransactionKey ||\n            transaction.roleAccountUpdateKey ||\n            transaction.roleFeePayerKey ||\n            transaction.failKey !== undefined\n        ) {\n            return new Error(duplicatedKeyInfo)\n        }\n    } else if (transaction.failKey !== undefined) {\n        if (transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey) {\n            return new Error(duplicatedKeyInfo)\n        }\n    }\n}\n\nfunction checkUpdateEssential(transaction) {\n    if (transaction.to !== undefined) {\n        return new Error(`\"to\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.value !== undefined) {\n        return new Error(`\"value\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateAccountUpdate(transaction) {\n    let error = checkUpdateEssential(transaction)\n    if (error) return error\n\n    error = validateAccountTransaction(transaction)\n    if (error) return error\n\n    return validateNonFeeDelegated(transaction)\n}\n\nfunction validateFeeDelegatedAccountUpdate(transaction) {\n    let error = checkUpdateEssential(transaction)\n    if (error) return error\n\n    error = validateAccountTransaction(transaction)\n    if (error) return error\n\n    return validateFeeDelegated(transaction)\n}\n\nfunction validateFeeDelegatedAccountUpdateWithRatio(transaction) {\n    return validateFeeDelegatedAccountUpdate(transaction)\n}\n\nfunction checkDeployEssential(transaction) {\n    if (transaction.value === undefined) {\n        return new Error('\"value\" is missing')\n    }\n    if (transaction.data === undefined) {\n        return new Error('\"data\" is missing')\n    }\n    if (transaction.to !== undefined && transaction.to !== '0x') {\n        return new Error(`\"to\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.codeFormat !== undefined && !validateCodeFormat(transaction.codeFormat)) {\n        return new Error(`The codeFormat(${transaction.codeFormat}) is invalid.`)\n    }\n}\n\nfunction validateSmartContractDeploy(transaction) {\n    let error = checkDeployEssential(transaction)\n    if (error) return error\n\n    error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedSmartContractDeploy(transaction) {\n    let error = checkDeployEssential(transaction)\n    if (error) return error\n\n    error = validateNotAccountTransaction(transaction)\n    if (error) return error\n\n    return validateFeeDelegated(transaction)\n}\n\nfunction validateFeeDelegatedSmartContractDeployWithRatio(transaction) {\n    return validateFeeDelegatedSmartContractDeploy(transaction)\n}\n\nfunction checkExecutionEssential(transaction) {\n    if (transaction.to === undefined) {\n        return new Error('\"to\" is missing')\n    }\n    if (!utils.isAddress(transaction.to)) {\n        return new Error(`Invalid address of to: ${transaction.to}`)\n    }\n    if (transaction.data === undefined) {\n        return new Error('\"data\" is missing')\n    }\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateSmartContractExecution(transaction) {\n    let error = checkExecutionEssential(transaction)\n    if (error) return error\n\n    error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedSmartContractExecution(transaction) {\n    let error = checkExecutionEssential(transaction)\n    if (error) return error\n\n    error = validateNotAccountTransaction(transaction)\n    if (error) return error\n\n    return validateFeeDelegated(transaction)\n}\n\nfunction validateFeeDelegatedSmartContractExecutionWithRatio(transaction) {\n    return validateFeeDelegatedSmartContractExecution(transaction)\n}\n\nfunction checkCacncelEssential(transaction) {\n    if (transaction.to !== undefined) {\n        return new Error(`\"to\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.value !== undefined) {\n        return new Error(`\"value\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.data !== undefined) {\n        return new Error(`\"data\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateCancel(transaction) {\n    let error = checkCacncelEssential(transaction)\n    if (error) return error\n\n    error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedCancel(transaction) {\n    let error = checkCacncelEssential(transaction)\n    if (error) return error\n\n    error = validateNotAccountTransaction(transaction)\n    if (error) return error\n\n    return validateFeeDelegated(transaction)\n}\n\nfunction validateFeeDelegatedCancelWithRatio(transaction) {\n    return validateFeeDelegatedCancel(transaction)\n}\n\nmodule.exports = {\n    validateParams,\n    validateTxType,\n    validateCodeFormat,\n}\n"]},"metadata":{},"sourceType":"script"}