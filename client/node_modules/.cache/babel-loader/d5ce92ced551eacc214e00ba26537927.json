{"ast":null,"code":"/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nvar RLP = require('eth-lib/lib/rlp');\n\nvar Bytes = require('eth-lib/lib/bytes');\n\nvar helpers = require('../../../../caver-core-helpers');\n\nvar CHAIN_DATA_ANCHORING_TYPE_TAG = helpers.constants.CHAIN_DATA_ANCHORING_TYPE_TAG;\n\nfunction rlpEncodeForChainDataAnchoring(transaction) {\n  return RLP.encode([RLP.encode([CHAIN_DATA_ANCHORING_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), Bytes.fromNat(transaction.anchoredData)]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nmodule.exports = {\n  rlpEncodeForChainDataAnchoring\n};","map":{"version":3,"sources":["C:/Users/MONK/Desktop/Pro/client/node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src/transactionType/serviceChain.js"],"names":["RLP","require","Bytes","helpers","CHAIN_DATA_ANCHORING_TYPE_TAG","constants","rlpEncodeForChainDataAnchoring","transaction","encode","fromNat","nonce","gasPrice","gas","to","toLowerCase","value","from","anchoredData","chainId","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,iBAAD,CAAnB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,mBAAD,CAArB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,gCAAD,CAAvB;;IAEQG,6B,GAAkCD,OAAO,CAACE,S,CAA1CD,6B;;AAER,SAASE,8BAAT,CAAwCC,WAAxC,EAAqD;AACjD,SAAOP,GAAG,CAACQ,MAAJ,CAAW,CACdR,GAAG,CAACQ,MAAJ,CAAW,CACPJ,6BADO,EAEPF,KAAK,CAACO,OAAN,CAAcF,WAAW,CAACG,KAA1B,CAFO,EAGPR,KAAK,CAACO,OAAN,CAAcF,WAAW,CAACI,QAA1B,CAHO,EAIPT,KAAK,CAACO,OAAN,CAAcF,WAAW,CAACK,GAA1B,CAJO,EAKPL,WAAW,CAACM,EAAZ,CAAeC,WAAf,EALO,EAMPZ,KAAK,CAACO,OAAN,CAAcF,WAAW,CAACQ,KAA1B,CANO,EAOPR,WAAW,CAACS,IAAZ,CAAiBF,WAAjB,EAPO,EAQPZ,KAAK,CAACO,OAAN,CAAcF,WAAW,CAACU,YAA1B,CARO,CAAX,CADc,EAWdf,KAAK,CAACO,OAAN,CAAcF,WAAW,CAACW,OAAZ,IAAuB,KAArC,CAXc,EAYd,IAZc,EAad,IAbc,CAAX,CAAP;AAeH;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACbd,EAAAA;AADa,CAAjB","sourcesContent":["/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst RLP = require('eth-lib/lib/rlp')\nconst Bytes = require('eth-lib/lib/bytes')\nconst helpers = require('../../../../caver-core-helpers')\n\nconst { CHAIN_DATA_ANCHORING_TYPE_TAG } = helpers.constants\n\nfunction rlpEncodeForChainDataAnchoring(transaction) {\n    return RLP.encode([\n        RLP.encode([\n            CHAIN_DATA_ANCHORING_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value),\n            transaction.from.toLowerCase(),\n            Bytes.fromNat(transaction.anchoredData),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nmodule.exports = {\n    rlpEncodeForChainDataAnchoring,\n}\n"]},"metadata":{},"sourceType":"script"}