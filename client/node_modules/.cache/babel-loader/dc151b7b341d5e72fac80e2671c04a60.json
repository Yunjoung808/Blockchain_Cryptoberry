{"ast":null,"code":"/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-eth-contract/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n\n/**\n * @file contract.js\n *\n * To initialize a contract use:\n *\n *  let Contract = require('web3-eth-contract');\n *  Contract.setProvider('ws://localhost:8546');\n *  let contract = new Contract(abi, address, ...);\n *\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = require('lodash');\n\nvar core = require('../../../caver-core');\n\nvar Method = require('../../../caver-core-method');\n\nvar utils = require('../../../caver-utils');\n\nvar Subscription = require('../../../caver-core-subscriptions').subscription;\n\nvar _require = require('../../../caver-core-helpers'),\n    formatters = _require.formatters;\n\nvar _require2 = require('../../../caver-core-helpers'),\n    errors = _require2.errors;\n\nvar abi = require('../../caver-klay-abi');\n/**\n * Should be called to create new contract instance\n *\n * @method Contract\n * @constructor\n * @param {Array} jsonInterface\n * @param {String} address\n * @param {Object} options\n */\n\n/**\n * let myContract = new cav.klay.Contract([...], '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe', {\n *   from: '0x1234567890123456789012345678901234567891', // default from address\n *   gasPrice: '20000000000', // default gas price in wei, 20 gwei in this case\n *   data: '',(bytecode, when contract deploy)\n *   gas: 200000, (gas limit)\n * });\n */\n\n\nvar Contract = function Contract(jsonInterface, address, options) {\n  var _this = this;\n\n  var args = Array.prototype.slice.call(arguments);\n\n  if (!(this instanceof Contract)) {\n    throw new Error('Please use the \"new\" keyword to instantiate a cav.klay.contract() object!');\n  } // sets _requestmanager\n\n\n  core.packageInit(this, [this.constructor.currentProvider]);\n  this.clearSubscriptions = this._requestManager.clearSubscriptions;\n\n  if (!jsonInterface || !Array.isArray(jsonInterface)) {\n    throw new Error('You must provide the json interface of the contract when instantiating a contract object.');\n  } // create the options object\n\n\n  this.options = {};\n  var lastArg = args[args.length - 1];\n\n  if (_.isObject(lastArg) && !_.isArray(lastArg)) {\n    options = lastArg;\n    this.options = _.extend(this.options, this._getOrSetDefaultOptions(options));\n\n    if (_.isObject(address)) {\n      address = null;\n    }\n  } // set address\n\n\n  Object.defineProperty(this.options, 'address', {\n    set(value) {\n      if (value) {\n        _this._address = utils.toChecksumAddress(formatters.inputAddressFormatter(value));\n      }\n    },\n\n    get() {\n      return _this._address;\n    },\n\n    enumerable: true\n  }); // add method and event signatures, when the jsonInterface gets set\n\n  Object.defineProperty(this.options, 'jsonInterface', {\n    set(value) {\n      _this.methods = {};\n      _this.events = {};\n      _this._jsonInterface = value.map(function (method) {\n        var func;\n        var funcName;\n\n        if (method.name) {\n          funcName = utils._jsonInterfaceMethodToString(method);\n        } // function\n\n\n        if (method.type === 'function') {\n          method.signature = abi.encodeFunctionSignature(funcName);\n          func = _this._createTxObject.bind({\n            method,\n            parent: _this\n          }); // add method only if not one already exists\n\n          if (!_this.methods[method.name]) {\n            _this.methods[method.name] = func;\n          } else {\n            var cascadeFunc = _this._createTxObject.bind({\n              method,\n              parent: _this,\n              nextMethod: _this.methods[method.name]\n            });\n\n            _this.methods[method.name] = cascadeFunc;\n          } // definitely add the method based on its signature\n\n\n          _this.methods[method.signature] = func; // add method by name\n\n          _this.methods[funcName] = func; // event\n        } else if (method.type === 'event') {\n          method.signature = abi.encodeEventSignature(funcName);\n\n          var event = _this._on.bind(_this, method.signature); // add method only if not already exists\n\n\n          if (!_this.events[method.name] || _this.events[method.name].name === 'bound ') {\n            _this.events[method.name] = event;\n          } // definitely add the method based on its signature\n\n\n          _this.events[method.signature] = event; // add event by name\n\n          _this.events[funcName] = event;\n        }\n\n        return method;\n      }); // add allEvents\n\n      _this.events.allEvents = _this._on.bind(_this, 'allevents');\n      return _this._jsonInterface;\n    },\n\n    get() {\n      return _this._jsonInterface;\n    },\n\n    enumerable: true\n  }); // get default account from the Class\n\n  var defaultAccount = this.constructor.defaultAccount;\n  var defaultBlock = this.constructor.defaultBlock || 'latest';\n  Object.defineProperty(this, 'defaultAccount', {\n    get() {\n      return defaultAccount;\n    },\n\n    set(val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n      }\n\n      return val;\n    },\n\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get() {\n      return defaultBlock;\n    },\n\n    set(val) {\n      if (!utils.isValidBlockNumberCandidate(val)) {\n        throw new Error('Invalid default block number.');\n      }\n\n      defaultBlock = val;\n      return val;\n    },\n\n    enumerable: true\n  }); // Check for setting options property.\n\n  Object.defineProperty(this.options, 'from', {\n    set(value) {\n      if (value) {\n        _this._from = utils.toChecksumAddress(formatters.inputAddressFormatter(value));\n      }\n    },\n\n    get() {\n      return _this._from;\n    },\n\n    enumerable: true\n  });\n  Object.defineProperty(this.options, 'gasPrice', {\n    set(value) {\n      if (value) {\n        if (!utils.isValidNSHSN(value)) {\n          throw errors.invalidGasPrice();\n        }\n\n        _this._gasPrice = value;\n      }\n    },\n\n    get() {\n      return _this._gasPrice;\n    },\n\n    enumerable: true\n  });\n  Object.defineProperty(this.options, 'gas', {\n    set(value) {\n      if (value) {\n        if (!utils.isValidNSHSN(value)) throw errors.invalidGasLimit();\n        _this._gas = value;\n      }\n    },\n\n    get() {\n      return _this._gas;\n    },\n\n    enumerable: true\n  });\n  Object.defineProperty(this.options, 'data', {\n    set(value) {\n      if (value) {\n        if (!utils.isHexStrict(value)) throw errors.invalidData();\n        _this._data = value;\n      }\n    },\n\n    get() {\n      return _this._data;\n    },\n\n    enumerable: true\n  }); // properties\n\n  this.methods = {};\n  this.events = {};\n  this._address = null;\n  this._jsonInterface = []; // set getter/setter properties\n\n  this.options.address = address;\n  this.options.jsonInterface = jsonInterface;\n};\n\nContract.setProvider = function (provider, accounts) {\n  core.packageInit(this, [provider]);\n  this._klayAccounts = accounts;\n};\n\nContract.prototype.addAccounts = function (accounts) {\n  this._klayAccounts = accounts;\n};\n/**\n * Get the callback and modiufy the array if necessary\n *\n * @method _getCallback\n * @param {Array} args\n * @return {Function} the callback\n */\n\n\nContract.prototype._getCallback = function getCallback(args) {\n  if (args && _.isFunction(args[args.length - 1])) {\n    return args.pop(); // modify the args array!\n  }\n};\n/**\n * Checks that no listener with name \"newListener\" or \"removeListener\" is added.\n *\n * @method _checkListener\n * @param {String} type\n * @param {String} event\n * @return {Object} the contract instance\n */\n\n/**\n * this._checkListener('newListener', subOptions.event.name);\n * this._checkListener('removeListener', subOptions.event.name);\n */\n\n\nContract.prototype._checkListener = function (type, event) {\n  if (event === type) {\n    throw new Error(\"The event \\\"\".concat(type, \"\\\" is a reserved event name, you can't use it.\"));\n  }\n};\n/**\n * Use default values, if options are not available\n *\n * @method _getOrSetDefaultOptions\n * @param {Object} options the options gived by the user\n * @return {Object} the options with gaps filled by defaults\n */\n\n\nContract.prototype._getOrSetDefaultOptions = function getOrSetDefaultOptions(options) {\n  var gasPrice = options.gasPrice ? String(options.gasPrice) : null;\n  var from = options.from ? utils.toChecksumAddress(formatters.inputAddressFormatter(options.from)) : null;\n  options.data = options.data || this.options.data;\n  options.from = from || this.options.from;\n  options.gasPrice = gasPrice || this.options.gasPrice; // If options.gas isn't set manually, use options.gasLimit, this.options.gas instead.\n\n  if (typeof options.gas === 'undefined') {\n    options.gas = options.gasLimit || this.options.gas;\n  } // TODO replace with only gasLimit?\n\n\n  delete options.gasLimit;\n  return options;\n};\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method _encodeEventABI\n * @param {Object} event\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\n\n/**\n * _encodeEventABI\n * 1. options\n * options = {\n *   filter: {...},\n *   topics: [...],\n * }\n *   cf. topics\n *   - This allows you to manually set the topics for the event filter.\n *   - If given the filter property and event signature, (topic[0]) will not\n *   - be set automatically.\n *\n * 2. event\n * {\n *   anonymous: Bool,\n *   signature:\n *   name: String,\n *   inputs: [...],\n * }\n * cf) signature\n * - The signature’s hash of the event is one of the topics,\n * - unless you used the anonymous specifier to declare the event.\n * - This would mean filtering for anonymous, specific events by name is not possible.\n * - keccak256(\"burned(address,uint)\") = 0x0970ce1235167a71...\n */\n\n\nContract.prototype._encodeEventABI = function (event, options) {\n  options = options || {};\n  var filter = options.filter || {};\n  var result = {};\n  ['fromBlock', 'toBlock'].filter(function (f) {\n    return options[f] !== undefined;\n  }).forEach(function (f) {\n    result[f] = formatters.inputBlockNumberFormatter(options[f]);\n  }); // use given topics\n\n  if (_.isArray(options.topics)) {\n    result.topics = options.topics; // create topics based on filter\n  } else {\n    result.topics = []; // add event signature\n\n    if (event && !event.anonymous && event.name !== 'ALLEVENTS') {\n      result.topics.push(event.signature);\n    } // add event topics (indexed arguments)\n\n\n    if (event.name !== 'ALLEVENTS') {\n      var indexedTopics = event.inputs.filter(i => i.indexed === true).map(i => {\n        var value = filter[i.name];\n        if (!value) return null; // TODO: https://github.com/ethereum/web3.js/issues/344\n\n        if (_.isArray(value)) {\n          return value.map(v => abi.encodeParameter(i.type, v));\n        }\n\n        return abi.encodeParameter(i.type, value);\n      });\n      result.topics = result.topics.concat(indexedTopics);\n    }\n\n    if (!result.topics.length) delete result.topics;\n  }\n\n  if (this.options.address) {\n    result.address = this.options.address.toLowerCase();\n  }\n\n  return result;\n};\n/**\n * Should be used to decode indexed params and options\n *\n * @method _decodeEventABI\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\n\n\nContract.prototype._decodeEventABI = function (data) {\n  var event = this;\n  data.data = data.data || '';\n  data.topics = data.topics || [];\n  var result = formatters.outputLogFormatter(data); // if allEvents get the right event\n\n  if (event.name === 'ALLEVENTS') {\n    event = event.jsonInterface.find(function (intf) {\n      return intf.signature === data.topics[0];\n    }) || {\n      anonymous: true\n    };\n  } // create empty inputs if none are present (e.g. anonymous events on allEvents)\n\n\n  event.inputs = event.inputs || [];\n  var argTopics = event.anonymous ? data.topics : data.topics.slice(1);\n  result.returnValues = abi.decodeLog(event.inputs, data.data, argTopics);\n  delete result.returnValues.__length__; // add name\n\n  result.event = event.name; // add signature\n\n  result.signature = event.anonymous || !data.topics[0] ? null : data.topics[0]; // move the data and topics to \"raw\"\n\n  result.raw = {\n    data: result.data,\n    topics: result.topics\n  };\n  delete result.data;\n  delete result.topics;\n  return result;\n};\n/**\n * Encodes an ABI for a method, including signature or the method.\n * Or when constructor encodes only the constructor parameters.\n *\n * @method _encodeMethodABI\n * @param {Mixed} args the arguments to encode\n * @param {String} the encoded ABI\n */\n\n\nContract.prototype._encodeMethodABI = function _encodeMethodABI() {\n  var methodSignature = this._method.signature;\n  var args = this.arguments || [];\n  var signature = false;\n  var paramsABI = this._parent.options.jsonInterface.filter(function (json) {\n    return methodSignature === 'constructor' && json.type === methodSignature || (json.signature === methodSignature || json.signature === methodSignature.replace('0x', '') || json.name === methodSignature) && json.type === 'function';\n  }).map(function (json) {\n    var inputLength = _.isArray(json.inputs) ? json.inputs.length : 0;\n\n    if (inputLength !== args.length) {\n      throw new Error(\"The number of arguments is not matching the methods required number. You need to pass \".concat(inputLength, \" arguments.\"));\n    }\n\n    if (json.type === 'function') {\n      signature = json.signature;\n    }\n\n    return _.isArray(json.inputs) ? json.inputs : [];\n  }).map(function (inputs) {\n    return abi.encodeParameters(inputs, args).replace('0x', '');\n  })[0] || ''; // return constructor\n\n  if (methodSignature === 'constructor') {\n    if (!this._deployData) {\n      throw new Error('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n    }\n\n    return this._deployData + paramsABI; // return method\n  }\n\n  var returnValue = signature ? signature + paramsABI : paramsABI;\n\n  if (!returnValue) {\n    throw new Error(\"Couldn't find a matching contract method named \\\"\".concat(this._method.name, \"\\\".\"));\n  } else {\n    return returnValue;\n  }\n};\n/**\n * Decode method return values\n *\n * @method _decodeMethodReturn\n * @param {Array} outputs\n * @param {String} returnValues\n * @return {Object} decoded output return values\n */\n\n\nContract.prototype._decodeMethodReturn = function (outputs, returnValues) {\n  if (!returnValues) {\n    return null;\n  }\n\n  returnValues = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n  var result = abi.decodeParameters(outputs, returnValues);\n\n  if (result.__length__ === 1) {\n    return result[0];\n  }\n\n  delete result.__length__;\n  return result;\n};\n/**\n * Deploys a contract and fire events based on its state: transactionHash, receipt\n *\n * All event listeners will be removed, once the last possible event is fired (\"error\", or \"receipt\")\n *\n * @method deploy\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} EventEmitter possible events are \"error\", \"transactionHash\" and \"receipt\"\n */\n\n\nContract.prototype.deploy = function (options, callback) {\n  options = options || {};\n  options.arguments = options.arguments || [];\n  options = this._getOrSetDefaultOptions(options); // return error, if no \"data\" is specified\n\n  if (!options.data) {\n    return utils._fireError(new Error('No \"data\" specified in neither the given options, nor the default options.'), null, null, callback);\n  }\n\n  var constructor = _.find(this.options.jsonInterface, function (method) {\n    return method.type === 'constructor';\n  }) || {};\n  constructor.signature = 'constructor';\n  return this._createTxObject.apply({\n    method: constructor,\n    parent: this,\n    deployData: options.data,\n    _klayAccounts: this.constructor._klayAccounts\n  }, options.arguments);\n};\n/**\n * Gets the event signature and outputformatters\n *\n * @method _generateEventOptions\n * @param {Object} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event options object\n */\n\n\nContract.prototype._generateEventOptions = function () {\n  var args = Array.prototype.slice.call(arguments); // get the callback\n\n  var callback = this._getCallback(args); // get the options\n\n\n  var options = _.isObject(args[args.length - 1]) ? args.pop() : {};\n  var event = _.isString(args[0]) ? args[0] : 'allevents';\n  event = event.toLowerCase() === 'allevents' ? {\n    name: 'ALLEVENTS',\n    jsonInterface: this.options.jsonInterface\n  } : this.options.jsonInterface.find(function (json) {\n    return json.type === 'event' && (json.name === event || json.signature === \"0x\".concat(event.replace('0x', '')));\n  });\n\n  if (!event) {\n    throw new Error(\"Event \\\"\".concat(event.name, \"\\\" doesn't exist in this contract.\"));\n  }\n\n  if (!utils.isAddress(this.options.address)) {\n    throw new Error(\"This contract object doesn't have address set yet, please set an address first.\");\n  }\n\n  return {\n    params: this._encodeEventABI(event, options),\n    event,\n    callback\n  };\n};\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method clone\n * @return {Object} the event subscription\n */\n\n\nContract.prototype.clone = function (contractAddress = this.options.address) {\n  return new this.constructor(this.options.jsonInterface, contractAddress, this.options);\n};\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n * (Subscribes to an event and unsubscribes immediately after the first event or error. Will only fire for a single event.)\n *\n *\n * @method once\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n *\n * myContract.once('MyEvent', {\n      filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n      fromBlock: 0\n  }, function(error, event){ console.log(event); });\n\n  // event output example\n  > {\n      returnValues: {\n          myIndexedParam: 20,\n          myOtherIndexedParam: '0x123456789...',\n          myNonIndexParam: 'My String'\n      },\n      raw: {\n          data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n          topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n      },\n      event: 'MyEvent',\n      signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n      logIndex: 0,\n      transactionIndex: 0,\n      transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n      blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n      blockNumber: 1234,\n      address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n  }\n */\n\n\nContract.prototype.once = function (event, options, callback) {\n  var args = Array.prototype.slice.call(arguments); // get the callback\n\n  callback = this._getCallback(args);\n\n  if (!callback) {\n    throw new Error('Once requires a callback as the second parameter.');\n  } // don't allow fromBlock\n\n\n  if (options) {\n    delete options.fromBlock;\n  } // don't return as once shouldn't provide \"on\"\n\n\n  this._on(event, options, function (err, res, sub) {\n    sub.unsubscribe();\n\n    if (_.isFunction(callback)) {\n      callback(err, res, sub);\n    }\n  });\n\n  return undefined;\n};\n/**\n * Adds event listeners and creates a subscription.\n *\n * @method _on\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n */\n\n\nContract.prototype._on = function () {\n  var subOptions = this._generateEventOptions.apply(this, arguments); // prevent the event \"newListener\" and \"removeListener\" from being overwritten\n\n\n  this._checkListener('newListener', subOptions.event.name);\n\n  this._checkListener('removeListener', subOptions.event.name); // TODO check if listener already exists? and reuse subscription if options are the same.\n\n\n  var subscription = new Subscription({\n    subscription: {\n      params: 1,\n      inputFormatter: [formatters.inputLogFormatter],\n      outputFormatter: this._decodeEventABI.bind(subOptions.event),\n\n      // DUBLICATE, also in caver-klay\n      subscriptionHandler(output) {\n        this.emit('data', output);\n\n        if (_.isFunction(this.callback)) {\n          this.callback(null, output, this);\n        }\n      }\n\n    },\n    type: 'klay',\n    requestManager: this._requestManager\n  });\n  subscription.subscribe('logs', subOptions.params, subOptions.callback || function () {});\n  return subscription;\n};\n/**\n * Get past events from contracts\n *\n * @method getPastEvents\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the promievent\n */\n\n/**\n * myContract.getPastEvents('MyEvent', {\n      filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n      fromBlock: 0,\n      toBlock: 'latest'\n  }, function(error, events){ console.log(events); })\n  .then(function(events){\n      console.log(events) // same results as the optional callback above\n  });\n\n  > [{\n      returnValues: {\n          myIndexedParam: 20,\n          myOtherIndexedParam: '0x123456789...',\n          myNonIndexParam: 'My String'\n      },\n      raw: {\n          data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n          topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n      },\n      event: 'MyEvent',\n      signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n      logIndex: 0,\n      transactionIndex: 0,\n      transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n      blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n      blockNumber: 1234,\n      address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n  },{\n      ...\n  }]\n */\n\n\nContract.prototype.getPastEvents = function () {\n  var subOptions = this._generateEventOptions.apply(this, arguments);\n\n  var getPastLogs = new Method({\n    name: 'getPastLogs',\n    call: 'klay_getLogs',\n    params: 1,\n    inputFormatter: [formatters.inputLogFormatter],\n    outputFormatter: this._decodeEventABI.bind(subOptions.event)\n  });\n  getPastLogs.setRequestManager(this._requestManager);\n  var call = getPastLogs.buildCall();\n  getPastLogs = null;\n  return call(subOptions.params, subOptions.callback);\n};\n/**\n * returns the an object with call, send, estimate functions\n *\n * @method _createTxObject\n * @returns {Object} an object with functions to call the methods\n */\n\n\nContract.prototype._createTxObject = function _createTxObject() {\n  var args = Array.prototype.slice.call(arguments);\n  var txObject = {};\n\n  if (this.method.type === 'function') {\n    txObject.call = this.parent._executeMethod.bind(txObject, 'call');\n    txObject.call.request = this.parent._executeMethod.bind(txObject, 'call', true); // to make batch requests\n  }\n\n  txObject.send = this.parent._executeMethod.bind(txObject, 'send');\n  txObject.send.request = this.parent._executeMethod.bind(txObject, 'send', true); // to make batch requests\n\n  txObject.encodeABI = this.parent._encodeMethodABI.bind(txObject);\n  txObject.estimateGas = this.parent._executeMethod.bind(txObject, 'estimate');\n\n  if (args && this.method.inputs && args.length !== this.method.inputs.length) {\n    if (this.nextMethod) {\n      return this.nextMethod.apply(null, args);\n    }\n\n    throw errors.InvalidNumberOfParams(args.length, this.method.inputs.length, this.method.name);\n  }\n\n  txObject.arguments = args || [];\n  txObject._method = this.method;\n  txObject._parent = this.parent;\n  txObject._klayAccounts = this.parent.constructor._klayAccounts || this._klayAccounts;\n\n  if (this.deployData) {\n    txObject._deployData = this.deployData;\n  }\n\n  return txObject;\n};\n/**\n * Generates the options for the execute call\n *\n * @method _processExecuteArguments\n * @param {Array} args\n * @param {Promise} defer\n */\n\n\nContract.prototype._processExecuteArguments = function _processExecuteArguments(args, defer) {\n  var processedArgs = {};\n  processedArgs.type = args.shift(); // get the callback\n\n  processedArgs.callback = this._parent._getCallback(args); // get block number to use for call\n\n  if (processedArgs.type === 'call' && args[args.length - 1] !== true && (_.isString(args[args.length - 1]) || isFinite(args[args.length - 1]))) {\n    processedArgs.defaultBlock = args.pop();\n  } // get the options\n\n\n  processedArgs.options = _.isObject(args[args.length - 1]) ? args.pop() : {}; // get the generateRequest argument for batch requests\n\n  processedArgs.generateRequest = args[args.length - 1] === true ? args.pop() : false;\n  processedArgs.options = this._parent._getOrSetDefaultOptions(processedArgs.options);\n  processedArgs.options.data = this.encodeABI(); // add contract address\n\n  if (!this._deployData && !utils.isAddress(this._parent.options.address)) {\n    throw new Error(\"This contract object doesn't have address set yet, please set an address first.\");\n  }\n\n  if (!this._deployData) {\n    processedArgs.options.to = this._parent.options.address;\n  } // return error, if no \"data\" is specified\n\n\n  if (!processedArgs.options.data) {\n    return utils._fireError(new Error(\"Couldn't find a matching contract method, or the number of parameters is wrong.\"), defer.eventEmitter, defer.reject, processedArgs.callback);\n  }\n\n  return processedArgs;\n};\n/**\n * Executes a call, transact or estimateGas on a contract function\n *\n * @method _executeMethod\n * @param {String} type the type this execute function should execute\n * @param {Boolean} makeRequest if true, it simply returns the request parameters, rather than executing it\n */\n\n\nContract.prototype._executeMethod = function _executeMethod() {\n  var _this = this;\n\n  var args = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), defer);\n\n  var defer = utils.promiEvent(args.type !== 'send');\n  /* eslint-disable-line no-var */\n\n  var klayAccounts = _this.constructor._klayAccounts || _this._klayAccounts; // Not allow to specify options.gas to 0.\n\n  if (args.options && args.options.gas === 0) {\n    throw errors.notAllowedZeroGas();\n  } // simple return request for batch requests\n\n\n  if (args.generateRequest) {\n    var payload = {\n      params: [formatters.inputCallFormatter.call(this._parent, args.options)],\n      callback: args.callback\n    };\n\n    if (args.type === 'call') {\n      payload.params.push(formatters.inputDefaultBlockNumberFormatter.call(this._parent, args.defaultBlock));\n      payload.method = 'klay_call';\n      payload.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs);\n    } else {\n      payload.method = 'klay_sendTransaction';\n    }\n\n    return payload;\n  }\n\n  switch (args.type) {\n    case 'estimate':\n      var estimateGas = new Method({\n        name: 'estimateGas',\n        call: 'klay_estimateGas',\n        params: 1,\n        inputFormatter: [formatters.inputCallFormatter],\n        outputFormatter: utils.hexToNumber,\n        requestManager: _this._parent._requestManager,\n        accounts: klayAccounts,\n        // is klay.accounts (necessary for wallet signing)\n        defaultAccount: _this._parent.defaultAccount,\n        defaultBlock: _this._parent.defaultBlock\n      }).createFunction();\n      return estimateGas(args.options, args.callback);\n\n    case 'call':\n      // TODO check errors: missing \"from\" should give error on deploy and send, call ?\n      var call = new Method({\n        name: 'call',\n        call: 'klay_call',\n        params: 2,\n        inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter],\n\n        // add output formatter for decoding\n        outputFormatter(result) {\n          return _this._parent._decodeMethodReturn(_this._method.outputs, result);\n        },\n\n        requestManager: _this._parent._requestManager,\n        accounts: klayAccounts,\n        // is klay.accounts (necessary for wallet signing)\n        defaultAccount: _this._parent.defaultAccount,\n        defaultBlock: _this._parent.defaultBlock\n      }).createFunction();\n      return call(args.options, args.defaultBlock, args.callback);\n\n    case 'send':\n      // return error, if no \"from\" is specified\n      if (!utils.isAddress(args.options.from)) {\n        return utils._fireError(new Error('No \"from\" address specified in neither the given options, nor the default options.'), defer.eventEmitter, defer.reject, args.callback);\n      }\n\n      if (_.isBoolean(this._method.payable) && !this._method.payable && args.options.value && args.options.value > 0) {\n        return utils._fireError(new Error('Can not send value to non-payable contract method or constructor'), defer.eventEmitter, defer.reject, args.callback);\n      } // make sure receipt logs are decoded\n\n\n      var extraFormatters = {\n        receiptFormatter(receipt) {\n          if (_.isArray(receipt.logs)) {\n            // decode logs\n            var events = _.map(receipt.logs, function (log) {\n              return _this._parent._decodeEventABI.call({\n                name: 'ALLEVENTS',\n                jsonInterface: _this._parent.options.jsonInterface\n              }, log);\n            }); // make log names keys\n\n\n            receipt.events = {};\n            var count = 0;\n            events.forEach(function (ev) {\n              if (ev.event) {\n                // if > 1 of the same event, don't overwrite any existing events\n                if (receipt.events[ev.event]) {\n                  if (Array.isArray(receipt.events[ev.event])) {\n                    receipt.events[ev.event].push(ev);\n                  } else {\n                    receipt.events[ev.event] = [receipt.events[ev.event], ev];\n                  }\n                } else {\n                  receipt.events[ev.event] = ev;\n                }\n              } else {\n                receipt.events[count] = ev;\n                count++;\n              }\n            });\n            delete receipt.logs;\n          }\n\n          return receipt;\n        },\n\n        contractDeployFormatter(receipt) {\n          var newContract = _this._parent.clone(receipt.contractAddress);\n\n          return newContract;\n        }\n\n      };\n\n      if (args.options.type === undefined) {\n        if (this._deployData !== undefined) {\n          args.options.type = 'SMART_CONTRACT_DEPLOY';\n        } else {\n          args.options.type = 'SMART_CONTRACT_EXECUTION';\n        }\n      }\n\n      if (args.options.type !== 'SMART_CONTRACT_EXECUTION' && args.options.type !== 'SMART_CONTRACT_DEPLOY') {\n        throw new Error('Unsupported transaction type. Please use SMART_CONTRACT_EXECUTION or SMART_CONTRACT_DEPLOY.');\n      }\n\n      var sendTransaction = new Method({\n        name: 'sendTransaction',\n        call: 'klay_sendTransaction',\n        params: 1,\n        inputFormatter: [formatters.inputTransactionFormatter],\n        requestManager: _this._parent._requestManager,\n        accounts: _this.constructor._klayAccounts || _this._klayAccounts,\n        // is klay.accounts (necessary for wallet signing)\n        defaultAccount: _this._parent.defaultAccount,\n        defaultBlock: _this._parent.defaultBlock,\n        extraFormatters\n      }).createFunction();\n      var fromInWallet = sendTransaction.method.accounts.wallet[args.options.from.toLowerCase()];\n\n      if (!fromInWallet || !fromInWallet.privateKey) {\n        args.options.type = 'LEGACY';\n      }\n\n      return sendTransaction(args.options, args.callback);\n  }\n};\n\nmodule.exports = Contract;","map":{"version":3,"sources":["C:/Users/MONK/Desktop/Pro/client/node_modules/caver-js/packages/caver-klay/caver-klay-contract/src/index.js"],"names":["_","require","core","Method","utils","Subscription","subscription","formatters","errors","abi","Contract","jsonInterface","address","options","_this","args","Array","prototype","slice","call","arguments","Error","packageInit","constructor","currentProvider","clearSubscriptions","_requestManager","isArray","lastArg","length","isObject","extend","_getOrSetDefaultOptions","Object","defineProperty","set","value","_address","toChecksumAddress","inputAddressFormatter","get","enumerable","methods","events","_jsonInterface","map","method","func","funcName","name","_jsonInterfaceMethodToString","type","signature","encodeFunctionSignature","_createTxObject","bind","parent","cascadeFunc","nextMethod","encodeEventSignature","event","_on","allEvents","defaultAccount","defaultBlock","val","isValidBlockNumberCandidate","_from","isValidNSHSN","invalidGasPrice","_gasPrice","invalidGasLimit","_gas","isHexStrict","invalidData","_data","setProvider","provider","accounts","_klayAccounts","addAccounts","_getCallback","getCallback","isFunction","pop","_checkListener","getOrSetDefaultOptions","gasPrice","String","from","data","gas","gasLimit","_encodeEventABI","filter","result","f","undefined","forEach","inputBlockNumberFormatter","topics","anonymous","push","indexedTopics","inputs","i","indexed","v","encodeParameter","concat","toLowerCase","_decodeEventABI","outputLogFormatter","find","intf","argTopics","returnValues","decodeLog","__length__","raw","_encodeMethodABI","methodSignature","_method","paramsABI","_parent","json","replace","inputLength","encodeParameters","_deployData","returnValue","_decodeMethodReturn","outputs","decodeParameters","deploy","callback","_fireError","apply","deployData","_generateEventOptions","isString","isAddress","params","clone","contractAddress","once","fromBlock","err","res","sub","unsubscribe","subOptions","inputFormatter","inputLogFormatter","outputFormatter","subscriptionHandler","output","emit","requestManager","subscribe","getPastEvents","getPastLogs","setRequestManager","buildCall","txObject","_executeMethod","request","send","encodeABI","estimateGas","InvalidNumberOfParams","_processExecuteArguments","defer","processedArgs","shift","isFinite","generateRequest","to","eventEmitter","reject","promiEvent","klayAccounts","notAllowedZeroGas","payload","inputCallFormatter","inputDefaultBlockNumberFormatter","format","hexToNumber","createFunction","isBoolean","payable","extraFormatters","receiptFormatter","receipt","logs","log","count","ev","contractDeployFormatter","newContract","sendTransaction","inputTransactionFormatter","fromInWallet","wallet","privateKey","module","exports"],"mappings":"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","sourcesContent":["/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-eth-contract/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n/**\n * @file contract.js\n *\n * To initialize a contract use:\n *\n *  let Contract = require('web3-eth-contract');\n *  Contract.setProvider('ws://localhost:8546');\n *  let contract = new Contract(abi, address, ...);\n *\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nconst _ = require('lodash')\nconst core = require('../../../caver-core')\nconst Method = require('../../../caver-core-method')\nconst utils = require('../../../caver-utils')\nconst Subscription = require('../../../caver-core-subscriptions').subscription\nconst { formatters } = require('../../../caver-core-helpers')\nconst { errors } = require('../../../caver-core-helpers')\nconst abi = require('../../caver-klay-abi')\n\n/**\n * Should be called to create new contract instance\n *\n * @method Contract\n * @constructor\n * @param {Array} jsonInterface\n * @param {String} address\n * @param {Object} options\n */\n\n/**\n * let myContract = new cav.klay.Contract([...], '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe', {\n *   from: '0x1234567890123456789012345678901234567891', // default from address\n *   gasPrice: '20000000000', // default gas price in wei, 20 gwei in this case\n *   data: '',(bytecode, when contract deploy)\n *   gas: 200000, (gas limit)\n * });\n */\nconst Contract = function Contract(jsonInterface, address, options) {\n    const _this = this\n    const args = Array.prototype.slice.call(arguments)\n\n    if (!(this instanceof Contract)) {\n        throw new Error('Please use the \"new\" keyword to instantiate a cav.klay.contract() object!')\n    }\n\n    // sets _requestmanager\n    core.packageInit(this, [this.constructor.currentProvider])\n\n    this.clearSubscriptions = this._requestManager.clearSubscriptions\n\n    if (!jsonInterface || !Array.isArray(jsonInterface)) {\n        throw new Error('You must provide the json interface of the contract when instantiating a contract object.')\n    }\n\n    // create the options object\n    this.options = {}\n\n    const lastArg = args[args.length - 1]\n    if (_.isObject(lastArg) && !_.isArray(lastArg)) {\n        options = lastArg\n        this.options = _.extend(this.options, this._getOrSetDefaultOptions(options))\n\n        if (_.isObject(address)) {\n            address = null\n        }\n    }\n\n    // set address\n    Object.defineProperty(this.options, 'address', {\n        set(value) {\n            if (value) {\n                _this._address = utils.toChecksumAddress(formatters.inputAddressFormatter(value))\n            }\n        },\n        get() {\n            return _this._address\n        },\n        enumerable: true,\n    })\n\n    // add method and event signatures, when the jsonInterface gets set\n    Object.defineProperty(this.options, 'jsonInterface', {\n        set(value) {\n            _this.methods = {}\n            _this.events = {}\n\n            _this._jsonInterface = value.map(function(method) {\n                let func\n                let funcName\n                if (method.name) {\n                    funcName = utils._jsonInterfaceMethodToString(method)\n                }\n\n                // function\n                if (method.type === 'function') {\n                    method.signature = abi.encodeFunctionSignature(funcName)\n                    func = _this._createTxObject.bind({\n                        method,\n                        parent: _this,\n                    })\n\n                    // add method only if not one already exists\n                    if (!_this.methods[method.name]) {\n                        _this.methods[method.name] = func\n                    } else {\n                        const cascadeFunc = _this._createTxObject.bind({\n                            method,\n                            parent: _this,\n                            nextMethod: _this.methods[method.name],\n                        })\n                        _this.methods[method.name] = cascadeFunc\n                    }\n\n                    // definitely add the method based on its signature\n                    _this.methods[method.signature] = func\n\n                    // add method by name\n                    _this.methods[funcName] = func\n\n                    // event\n                } else if (method.type === 'event') {\n                    method.signature = abi.encodeEventSignature(funcName)\n                    const event = _this._on.bind(_this, method.signature)\n\n                    // add method only if not already exists\n                    if (!_this.events[method.name] || _this.events[method.name].name === 'bound ') {\n                        _this.events[method.name] = event\n                    }\n\n                    // definitely add the method based on its signature\n                    _this.events[method.signature] = event\n\n                    // add event by name\n                    _this.events[funcName] = event\n                }\n\n                return method\n            })\n\n            // add allEvents\n            _this.events.allEvents = _this._on.bind(_this, 'allevents')\n\n            return _this._jsonInterface\n        },\n        get() {\n            return _this._jsonInterface\n        },\n        enumerable: true,\n    })\n\n    // get default account from the Class\n    let { defaultAccount } = this.constructor\n    let defaultBlock = this.constructor.defaultBlock || 'latest'\n\n    Object.defineProperty(this, 'defaultAccount', {\n        get() {\n            return defaultAccount\n        },\n        set(val) {\n            if (val) {\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val))\n            }\n\n            return val\n        },\n        enumerable: true,\n    })\n    Object.defineProperty(this, 'defaultBlock', {\n        get() {\n            return defaultBlock\n        },\n        set(val) {\n            if (!utils.isValidBlockNumberCandidate(val)) {\n                throw new Error('Invalid default block number.')\n            }\n            defaultBlock = val\n\n            return val\n        },\n        enumerable: true,\n    })\n\n    // Check for setting options property.\n    Object.defineProperty(this.options, 'from', {\n        set(value) {\n            if (value) {\n                _this._from = utils.toChecksumAddress(formatters.inputAddressFormatter(value))\n            }\n        },\n        get() {\n            return _this._from\n        },\n        enumerable: true,\n    })\n\n    Object.defineProperty(this.options, 'gasPrice', {\n        set(value) {\n            if (value) {\n                if (!utils.isValidNSHSN(value)) {\n                    throw errors.invalidGasPrice()\n                }\n                _this._gasPrice = value\n            }\n        },\n        get() {\n            return _this._gasPrice\n        },\n        enumerable: true,\n    })\n\n    Object.defineProperty(this.options, 'gas', {\n        set(value) {\n            if (value) {\n                if (!utils.isValidNSHSN(value)) throw errors.invalidGasLimit()\n                _this._gas = value\n            }\n        },\n        get() {\n            return _this._gas\n        },\n        enumerable: true,\n    })\n\n    Object.defineProperty(this.options, 'data', {\n        set(value) {\n            if (value) {\n                if (!utils.isHexStrict(value)) throw errors.invalidData()\n                _this._data = value\n            }\n        },\n        get() {\n            return _this._data\n        },\n        enumerable: true,\n    })\n\n    // properties\n    this.methods = {}\n    this.events = {}\n\n    this._address = null\n    this._jsonInterface = []\n\n    // set getter/setter properties\n    this.options.address = address\n    this.options.jsonInterface = jsonInterface\n}\n\nContract.setProvider = function(provider, accounts) {\n    core.packageInit(this, [provider])\n\n    this._klayAccounts = accounts\n}\n\nContract.prototype.addAccounts = function(accounts) {\n    this._klayAccounts = accounts\n}\n\n/**\n * Get the callback and modiufy the array if necessary\n *\n * @method _getCallback\n * @param {Array} args\n * @return {Function} the callback\n */\nContract.prototype._getCallback = function getCallback(args) {\n    if (args && _.isFunction(args[args.length - 1])) {\n        return args.pop() // modify the args array!\n    }\n}\n\n/**\n * Checks that no listener with name \"newListener\" or \"removeListener\" is added.\n *\n * @method _checkListener\n * @param {String} type\n * @param {String} event\n * @return {Object} the contract instance\n */\n/**\n * this._checkListener('newListener', subOptions.event.name);\n * this._checkListener('removeListener', subOptions.event.name);\n */\nContract.prototype._checkListener = function(type, event) {\n    if (event === type) {\n        throw new Error(`The event \"${type}\" is a reserved event name, you can't use it.`)\n    }\n}\n\n/**\n * Use default values, if options are not available\n *\n * @method _getOrSetDefaultOptions\n * @param {Object} options the options gived by the user\n * @return {Object} the options with gaps filled by defaults\n */\nContract.prototype._getOrSetDefaultOptions = function getOrSetDefaultOptions(options) {\n    const gasPrice = options.gasPrice ? String(options.gasPrice) : null\n    const from = options.from ? utils.toChecksumAddress(formatters.inputAddressFormatter(options.from)) : null\n\n    options.data = options.data || this.options.data\n\n    options.from = from || this.options.from\n    options.gasPrice = gasPrice || this.options.gasPrice\n\n    // If options.gas isn't set manually, use options.gasLimit, this.options.gas instead.\n    if (typeof options.gas === 'undefined') {\n        options.gas = options.gasLimit || this.options.gas\n    }\n\n    // TODO replace with only gasLimit?\n    delete options.gasLimit\n\n    return options\n}\n\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method _encodeEventABI\n * @param {Object} event\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\n\n/**\n * _encodeEventABI\n * 1. options\n * options = {\n *   filter: {...},\n *   topics: [...],\n * }\n *   cf. topics\n *   - This allows you to manually set the topics for the event filter.\n *   - If given the filter property and event signature, (topic[0]) will not\n *   - be set automatically.\n *\n * 2. event\n * {\n *   anonymous: Bool,\n *   signature:\n *   name: String,\n *   inputs: [...],\n * }\n * cf) signature\n * - The signature’s hash of the event is one of the topics,\n * - unless you used the anonymous specifier to declare the event.\n * - This would mean filtering for anonymous, specific events by name is not possible.\n * - keccak256(\"burned(address,uint)\") = 0x0970ce1235167a71...\n */\nContract.prototype._encodeEventABI = function(event, options) {\n    options = options || {}\n    const filter = options.filter || {}\n    const result = {}\n\n    ;['fromBlock', 'toBlock']\n        .filter(function(f) {\n            return options[f] !== undefined\n        })\n        .forEach(function(f) {\n            result[f] = formatters.inputBlockNumberFormatter(options[f])\n        })\n\n    // use given topics\n    if (_.isArray(options.topics)) {\n        result.topics = options.topics\n        // create topics based on filter\n    } else {\n        result.topics = []\n\n        // add event signature\n        if (event && !event.anonymous && event.name !== 'ALLEVENTS') {\n            result.topics.push(event.signature)\n        }\n\n        // add event topics (indexed arguments)\n        if (event.name !== 'ALLEVENTS') {\n            const indexedTopics = event.inputs\n                .filter(i => i.indexed === true)\n                .map(i => {\n                    const value = filter[i.name]\n                    if (!value) return null\n\n                    // TODO: https://github.com/ethereum/web3.js/issues/344\n\n                    if (_.isArray(value)) {\n                        return value.map(v => abi.encodeParameter(i.type, v))\n                    }\n                    return abi.encodeParameter(i.type, value)\n                })\n\n            result.topics = result.topics.concat(indexedTopics)\n        }\n        if (!result.topics.length) delete result.topics\n    }\n    if (this.options.address) {\n        result.address = this.options.address.toLowerCase()\n    }\n\n    return result\n}\n\n/**\n * Should be used to decode indexed params and options\n *\n * @method _decodeEventABI\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\n\nContract.prototype._decodeEventABI = function(data) {\n    let event = this\n\n    data.data = data.data || ''\n    data.topics = data.topics || []\n    const result = formatters.outputLogFormatter(data)\n\n    // if allEvents get the right event\n    if (event.name === 'ALLEVENTS') {\n        event = event.jsonInterface.find(function(intf) {\n            return intf.signature === data.topics[0]\n        }) || { anonymous: true }\n    }\n\n    // create empty inputs if none are present (e.g. anonymous events on allEvents)\n    event.inputs = event.inputs || []\n\n    const argTopics = event.anonymous ? data.topics : data.topics.slice(1)\n\n    result.returnValues = abi.decodeLog(event.inputs, data.data, argTopics)\n    delete result.returnValues.__length__\n\n    // add name\n    result.event = event.name\n\n    // add signature\n    result.signature = event.anonymous || !data.topics[0] ? null : data.topics[0]\n\n    // move the data and topics to \"raw\"\n    result.raw = {\n        data: result.data,\n        topics: result.topics,\n    }\n    delete result.data\n    delete result.topics\n\n    return result\n}\n\n/**\n * Encodes an ABI for a method, including signature or the method.\n * Or when constructor encodes only the constructor parameters.\n *\n * @method _encodeMethodABI\n * @param {Mixed} args the arguments to encode\n * @param {String} the encoded ABI\n */\nContract.prototype._encodeMethodABI = function _encodeMethodABI() {\n    const methodSignature = this._method.signature\n    const args = this.arguments || []\n\n    let signature = false\n    const paramsABI =\n        this._parent.options.jsonInterface\n            .filter(function(json) {\n                return (\n                    (methodSignature === 'constructor' && json.type === methodSignature) ||\n                    ((json.signature === methodSignature ||\n                        json.signature === methodSignature.replace('0x', '') ||\n                        json.name === methodSignature) &&\n                        json.type === 'function')\n                )\n            })\n            .map(function(json) {\n                const inputLength = _.isArray(json.inputs) ? json.inputs.length : 0\n\n                if (inputLength !== args.length) {\n                    throw new Error(\n                        `The number of arguments is not matching the methods required number. You need to pass ${inputLength} arguments.`\n                    )\n                }\n                if (json.type === 'function') {\n                    signature = json.signature\n                }\n                return _.isArray(json.inputs) ? json.inputs : []\n            })\n            .map(function(inputs) {\n                return abi.encodeParameters(inputs, args).replace('0x', '')\n            })[0] || ''\n\n    // return constructor\n    if (methodSignature === 'constructor') {\n        if (!this._deployData) {\n            throw new Error('The contract has no contract data option set. This is necessary to append the constructor parameters.')\n        }\n\n        return this._deployData + paramsABI\n\n        // return method\n    }\n    const returnValue = signature ? signature + paramsABI : paramsABI\n\n    if (!returnValue) {\n        throw new Error(`Couldn't find a matching contract method named \"${this._method.name}\".`)\n    } else {\n        return returnValue\n    }\n}\n\n/**\n * Decode method return values\n *\n * @method _decodeMethodReturn\n * @param {Array} outputs\n * @param {String} returnValues\n * @return {Object} decoded output return values\n */\nContract.prototype._decodeMethodReturn = function(outputs, returnValues) {\n    if (!returnValues) {\n        return null\n    }\n\n    returnValues = returnValues.length >= 2 ? returnValues.slice(2) : returnValues\n    const result = abi.decodeParameters(outputs, returnValues)\n\n    if (result.__length__ === 1) {\n        return result[0]\n    }\n    delete result.__length__\n    return result\n}\n\n/**\n * Deploys a contract and fire events based on its state: transactionHash, receipt\n *\n * All event listeners will be removed, once the last possible event is fired (\"error\", or \"receipt\")\n *\n * @method deploy\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} EventEmitter possible events are \"error\", \"transactionHash\" and \"receipt\"\n */\n\nContract.prototype.deploy = function(options, callback) {\n    options = options || {}\n\n    options.arguments = options.arguments || []\n    options = this._getOrSetDefaultOptions(options)\n\n    // return error, if no \"data\" is specified\n    if (!options.data) {\n        return utils._fireError(\n            new Error('No \"data\" specified in neither the given options, nor the default options.'),\n            null,\n            null,\n            callback\n        )\n    }\n\n    const constructor =\n        _.find(this.options.jsonInterface, function(method) {\n            return method.type === 'constructor'\n        }) || {}\n    constructor.signature = 'constructor'\n\n    return this._createTxObject.apply(\n        {\n            method: constructor,\n            parent: this,\n            deployData: options.data,\n            _klayAccounts: this.constructor._klayAccounts,\n        },\n        options.arguments\n    )\n}\n\n/**\n * Gets the event signature and outputformatters\n *\n * @method _generateEventOptions\n * @param {Object} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event options object\n */\nContract.prototype._generateEventOptions = function() {\n    const args = Array.prototype.slice.call(arguments)\n\n    // get the callback\n    const callback = this._getCallback(args)\n\n    // get the options\n    const options = _.isObject(args[args.length - 1]) ? args.pop() : {}\n\n    let event = _.isString(args[0]) ? args[0] : 'allevents'\n    event =\n        event.toLowerCase() === 'allevents'\n            ? {\n                  name: 'ALLEVENTS',\n                  jsonInterface: this.options.jsonInterface,\n              }\n            : this.options.jsonInterface.find(function(json) {\n                  return json.type === 'event' && (json.name === event || json.signature === `0x${event.replace('0x', '')}`)\n              })\n\n    if (!event) {\n        throw new Error(`Event \"${event.name}\" doesn't exist in this contract.`)\n    }\n\n    if (!utils.isAddress(this.options.address)) {\n        throw new Error(\"This contract object doesn't have address set yet, please set an address first.\")\n    }\n\n    return {\n        params: this._encodeEventABI(event, options),\n        event,\n        callback,\n    }\n}\n\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method clone\n * @return {Object} the event subscription\n */\nContract.prototype.clone = function(contractAddress = this.options.address) {\n    return new this.constructor(this.options.jsonInterface, contractAddress, this.options)\n}\n\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n * (Subscribes to an event and unsubscribes immediately after the first event or error. Will only fire for a single event.)\n *\n *\n * @method once\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n *\n * myContract.once('MyEvent', {\n      filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n      fromBlock: 0\n  }, function(error, event){ console.log(event); });\n\n  // event output example\n  > {\n      returnValues: {\n          myIndexedParam: 20,\n          myOtherIndexedParam: '0x123456789...',\n          myNonIndexParam: 'My String'\n      },\n      raw: {\n          data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n          topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n      },\n      event: 'MyEvent',\n      signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n      logIndex: 0,\n      transactionIndex: 0,\n      transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n      blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n      blockNumber: 1234,\n      address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n  }\n */\nContract.prototype.once = function(event, options, callback) {\n    const args = Array.prototype.slice.call(arguments)\n\n    // get the callback\n    callback = this._getCallback(args)\n\n    if (!callback) {\n        throw new Error('Once requires a callback as the second parameter.')\n    }\n\n    // don't allow fromBlock\n    if (options) {\n        delete options.fromBlock\n    }\n\n    // don't return as once shouldn't provide \"on\"\n    this._on(event, options, function(err, res, sub) {\n        sub.unsubscribe()\n        if (_.isFunction(callback)) {\n            callback(err, res, sub)\n        }\n    })\n\n    return undefined\n}\n\n/**\n * Adds event listeners and creates a subscription.\n *\n * @method _on\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n */\nContract.prototype._on = function() {\n    const subOptions = this._generateEventOptions.apply(this, arguments)\n\n    // prevent the event \"newListener\" and \"removeListener\" from being overwritten\n    this._checkListener('newListener', subOptions.event.name)\n    this._checkListener('removeListener', subOptions.event.name)\n\n    // TODO check if listener already exists? and reuse subscription if options are the same.\n\n    const subscription = new Subscription({\n        subscription: {\n            params: 1,\n            inputFormatter: [formatters.inputLogFormatter],\n            outputFormatter: this._decodeEventABI.bind(subOptions.event),\n            // DUBLICATE, also in caver-klay\n            subscriptionHandler(output) {\n                this.emit('data', output)\n\n                if (_.isFunction(this.callback)) {\n                    this.callback(null, output, this)\n                }\n            },\n        },\n        type: 'klay',\n        requestManager: this._requestManager,\n    })\n    subscription.subscribe('logs', subOptions.params, subOptions.callback || function() {})\n\n    return subscription\n}\n\n/**\n * Get past events from contracts\n *\n * @method getPastEvents\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the promievent\n */\n\n/**\n * myContract.getPastEvents('MyEvent', {\n      filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n      fromBlock: 0,\n      toBlock: 'latest'\n  }, function(error, events){ console.log(events); })\n  .then(function(events){\n      console.log(events) // same results as the optional callback above\n  });\n\n  > [{\n      returnValues: {\n          myIndexedParam: 20,\n          myOtherIndexedParam: '0x123456789...',\n          myNonIndexParam: 'My String'\n      },\n      raw: {\n          data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n          topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n      },\n      event: 'MyEvent',\n      signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n      logIndex: 0,\n      transactionIndex: 0,\n      transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n      blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n      blockNumber: 1234,\n      address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n  },{\n      ...\n  }]\n */\nContract.prototype.getPastEvents = function() {\n    const subOptions = this._generateEventOptions.apply(this, arguments)\n\n    let getPastLogs = new Method({\n        name: 'getPastLogs',\n        call: 'klay_getLogs',\n        params: 1,\n        inputFormatter: [formatters.inputLogFormatter],\n        outputFormatter: this._decodeEventABI.bind(subOptions.event),\n    })\n    getPastLogs.setRequestManager(this._requestManager)\n    const call = getPastLogs.buildCall()\n\n    getPastLogs = null\n\n    return call(subOptions.params, subOptions.callback)\n}\n\n/**\n * returns the an object with call, send, estimate functions\n *\n * @method _createTxObject\n * @returns {Object} an object with functions to call the methods\n */\n\nContract.prototype._createTxObject = function _createTxObject() {\n    const args = Array.prototype.slice.call(arguments)\n    const txObject = {}\n\n    if (this.method.type === 'function') {\n        txObject.call = this.parent._executeMethod.bind(txObject, 'call')\n        txObject.call.request = this.parent._executeMethod.bind(txObject, 'call', true) // to make batch requests\n    }\n\n    txObject.send = this.parent._executeMethod.bind(txObject, 'send')\n    txObject.send.request = this.parent._executeMethod.bind(txObject, 'send', true) // to make batch requests\n    txObject.encodeABI = this.parent._encodeMethodABI.bind(txObject)\n    txObject.estimateGas = this.parent._executeMethod.bind(txObject, 'estimate')\n\n    if (args && this.method.inputs && args.length !== this.method.inputs.length) {\n        if (this.nextMethod) {\n            return this.nextMethod.apply(null, args)\n        }\n        throw errors.InvalidNumberOfParams(args.length, this.method.inputs.length, this.method.name)\n    }\n\n    txObject.arguments = args || []\n    txObject._method = this.method\n    txObject._parent = this.parent\n    txObject._klayAccounts = this.parent.constructor._klayAccounts || this._klayAccounts\n\n    if (this.deployData) {\n        txObject._deployData = this.deployData\n    }\n\n    return txObject\n}\n\n/**\n * Generates the options for the execute call\n *\n * @method _processExecuteArguments\n * @param {Array} args\n * @param {Promise} defer\n */\nContract.prototype._processExecuteArguments = function _processExecuteArguments(args, defer) {\n    const processedArgs = {}\n\n    processedArgs.type = args.shift()\n\n    // get the callback\n    processedArgs.callback = this._parent._getCallback(args)\n\n    // get block number to use for call\n    if (\n        processedArgs.type === 'call' &&\n        args[args.length - 1] !== true &&\n        (_.isString(args[args.length - 1]) || isFinite(args[args.length - 1]))\n    ) {\n        processedArgs.defaultBlock = args.pop()\n    }\n\n    // get the options\n    processedArgs.options = _.isObject(args[args.length - 1]) ? args.pop() : {}\n\n    // get the generateRequest argument for batch requests\n    processedArgs.generateRequest = args[args.length - 1] === true ? args.pop() : false\n\n    processedArgs.options = this._parent._getOrSetDefaultOptions(processedArgs.options)\n    processedArgs.options.data = this.encodeABI()\n\n    // add contract address\n    if (!this._deployData && !utils.isAddress(this._parent.options.address)) {\n        throw new Error(\"This contract object doesn't have address set yet, please set an address first.\")\n    }\n\n    if (!this._deployData) {\n        processedArgs.options.to = this._parent.options.address\n    }\n\n    // return error, if no \"data\" is specified\n    if (!processedArgs.options.data) {\n        return utils._fireError(\n            new Error(\"Couldn't find a matching contract method, or the number of parameters is wrong.\"),\n            defer.eventEmitter,\n            defer.reject,\n            processedArgs.callback\n        )\n    }\n\n    return processedArgs\n}\n\n/**\n * Executes a call, transact or estimateGas on a contract function\n *\n * @method _executeMethod\n * @param {String} type the type this execute function should execute\n * @param {Boolean} makeRequest if true, it simply returns the request parameters, rather than executing it\n */\n\nContract.prototype._executeMethod = function _executeMethod() {\n    const _this = this\n    const args = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), defer)\n    var defer = utils.promiEvent(args.type !== 'send') /* eslint-disable-line no-var */\n    const klayAccounts = _this.constructor._klayAccounts || _this._klayAccounts\n\n    // Not allow to specify options.gas to 0.\n    if (args.options && args.options.gas === 0) {\n        throw errors.notAllowedZeroGas()\n    }\n\n    // simple return request for batch requests\n    if (args.generateRequest) {\n        const payload = {\n            params: [formatters.inputCallFormatter.call(this._parent, args.options)],\n            callback: args.callback,\n        }\n\n        if (args.type === 'call') {\n            payload.params.push(formatters.inputDefaultBlockNumberFormatter.call(this._parent, args.defaultBlock))\n            payload.method = 'klay_call'\n            payload.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs)\n        } else {\n            payload.method = 'klay_sendTransaction'\n        }\n\n        return payload\n    }\n    switch (args.type) {\n        case 'estimate':\n            const estimateGas = new Method({\n                name: 'estimateGas',\n                call: 'klay_estimateGas',\n                params: 1,\n                inputFormatter: [formatters.inputCallFormatter],\n                outputFormatter: utils.hexToNumber,\n                requestManager: _this._parent._requestManager,\n                accounts: klayAccounts, // is klay.accounts (necessary for wallet signing)\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock,\n            }).createFunction()\n\n            return estimateGas(args.options, args.callback)\n\n        case 'call':\n            // TODO check errors: missing \"from\" should give error on deploy and send, call ?\n\n            const call = new Method({\n                name: 'call',\n                call: 'klay_call',\n                params: 2,\n                inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter],\n                // add output formatter for decoding\n                outputFormatter(result) {\n                    return _this._parent._decodeMethodReturn(_this._method.outputs, result)\n                },\n                requestManager: _this._parent._requestManager,\n                accounts: klayAccounts, // is klay.accounts (necessary for wallet signing)\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock,\n            }).createFunction()\n\n            return call(args.options, args.defaultBlock, args.callback)\n\n        case 'send':\n            // return error, if no \"from\" is specified\n            if (!utils.isAddress(args.options.from)) {\n                return utils._fireError(\n                    new Error('No \"from\" address specified in neither the given options, nor the default options.'),\n                    defer.eventEmitter,\n                    defer.reject,\n                    args.callback\n                )\n            }\n\n            if (_.isBoolean(this._method.payable) && !this._method.payable && args.options.value && args.options.value > 0) {\n                return utils._fireError(\n                    new Error('Can not send value to non-payable contract method or constructor'),\n                    defer.eventEmitter,\n                    defer.reject,\n                    args.callback\n                )\n            }\n\n            // make sure receipt logs are decoded\n            const extraFormatters = {\n                receiptFormatter(receipt) {\n                    if (_.isArray(receipt.logs)) {\n                        // decode logs\n                        const events = _.map(receipt.logs, function(log) {\n                            return _this._parent._decodeEventABI.call(\n                                {\n                                    name: 'ALLEVENTS',\n                                    jsonInterface: _this._parent.options.jsonInterface,\n                                },\n                                log\n                            )\n                        })\n\n                        // make log names keys\n                        receipt.events = {}\n                        let count = 0\n                        events.forEach(function(ev) {\n                            if (ev.event) {\n                                // if > 1 of the same event, don't overwrite any existing events\n                                if (receipt.events[ev.event]) {\n                                    if (Array.isArray(receipt.events[ev.event])) {\n                                        receipt.events[ev.event].push(ev)\n                                    } else {\n                                        receipt.events[ev.event] = [receipt.events[ev.event], ev]\n                                    }\n                                } else {\n                                    receipt.events[ev.event] = ev\n                                }\n                            } else {\n                                receipt.events[count] = ev\n                                count++\n                            }\n                        })\n\n                        delete receipt.logs\n                    }\n                    return receipt\n                },\n                contractDeployFormatter(receipt) {\n                    const newContract = _this._parent.clone(receipt.contractAddress)\n                    return newContract\n                },\n            }\n\n            if (args.options.type === undefined) {\n                if (this._deployData !== undefined) {\n                    args.options.type = 'SMART_CONTRACT_DEPLOY'\n                } else {\n                    args.options.type = 'SMART_CONTRACT_EXECUTION'\n                }\n            }\n\n            if (args.options.type !== 'SMART_CONTRACT_EXECUTION' && args.options.type !== 'SMART_CONTRACT_DEPLOY') {\n                throw new Error('Unsupported transaction type. Please use SMART_CONTRACT_EXECUTION or SMART_CONTRACT_DEPLOY.')\n            }\n\n            const sendTransaction = new Method({\n                name: 'sendTransaction',\n                call: 'klay_sendTransaction',\n                params: 1,\n                inputFormatter: [formatters.inputTransactionFormatter],\n                requestManager: _this._parent._requestManager,\n                accounts: _this.constructor._klayAccounts || _this._klayAccounts, // is klay.accounts (necessary for wallet signing)\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock,\n                extraFormatters,\n            }).createFunction()\n\n            const fromInWallet = sendTransaction.method.accounts.wallet[args.options.from.toLowerCase()]\n            if (!fromInWallet || !fromInWallet.privateKey) {\n                args.options.type = 'LEGACY'\n            }\n\n            return sendTransaction(args.options, args.callback)\n    }\n}\n\nmodule.exports = Contract\n"]},"metadata":{},"sourceType":"script"}