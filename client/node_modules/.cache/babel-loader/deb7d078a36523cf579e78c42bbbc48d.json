{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MONK\\\\Desktop\\\\Cryptoberry(db)\\\\client\\\\src\\\\components\\\\Navbars\\\\ExamplesNavbar.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { caver } from \"caver-js\"; // reactstrap components\n\nimport { Button, Collapse, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, NavbarBrand, Navbar, NavItem, NavLink, Nav, Container, Row, Col, UncontrolledTooltip, FormGroup, UncontrolledPopover, PopoverBody, PopoverHeader, Modal, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Label, UncontrolledCarousel } from \"reactstrap\";\n\nclass PagesNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeColor = () => {\n      if (document.documentElement.scrollTop > 99 || document.body.scrollTop > 99) {\n        this.setState({\n          color: \"bg-info\"\n        });\n      } else if (document.documentElement.scrollTop < 100 || document.body.scrollTop < 100) {\n        this.setState({\n          color: \"navbar-transparent\"\n        });\n      }\n    };\n\n    this.toggleCollapse = () => {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.setState({\n        collapseOpen: !this.state.collapseOpen\n      });\n    };\n\n    this.onCollapseExiting = () => {\n      this.setState({\n        collapseOut: \"collapsing-out\"\n      });\n    };\n\n    this.onCollapseExited = () => {\n      this.setState({\n        collapseOut: \"\"\n      });\n    };\n\n    this.scrollToDownload = () => {\n      document.getElementById(\"download-section\").scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.toggleModal = modalState => {\n      this.setState({\n        [modalState]: !this.state[modalState]\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        keystore: '',\n        privateKey: '',\n        password: '',\n        keystoreMsg: ''\n      });\n    };\n\n    this.handleImport = e => {\n      var keystore = e.target.files[0];\n      var fileReader = new FileReader();\n\n      fileReader.onload = e => {\n        try {\n          if (!this.checkValidKeystore(e.target.result)) {\n            this.setState({\n              keystoreMsg: 'Invalid keystore file.'\n            });\n            return;\n          }\n\n          this.setState({\n            keystore: e.target.result,\n            keystoreMsg: 'It is valid keystore. input your password.',\n            keystoreName: keystore.name\n          }, () => document.querySelector('#input-password').focus());\n        } catch (e) {\n          this.setState({\n            keystoreMsg: 'Invalid keystore file.'\n          });\n          return;\n        }\n      };\n\n      fileReader.readAsText(keystore);\n    };\n\n    this.checkValidKeystore = keystore => {\n      var parsedKeystore = JSON.parse(keystore);\n      var isValidKeystore = parsedKeystore.version && parsedKeystore.id && parsedKeystore.address && parsedKeystore.crypto;\n      return isValidKeystore;\n    };\n\n    this.handleLogin = () => {\n      var _this$state = this.state,\n          accessType = _this$state.accessType,\n          keystore = _this$state.keystore,\n          password = _this$state.password,\n          privateKey = _this$state.privateKey;\n\n      if (accessType == 'privateKey') {\n        this.integrateWallet(privateKey);\n        return;\n      }\n\n      try {\n        var _caver$klay$accounts$ = caver.klay.accounts.decrypt(keystore, password),\n            privateKeyFromKeystore = _caver$klay$accounts$.privateKey;\n\n        this.integrateWallet(privateKeyFromKeystore);\n      } catch (e) {\n        this.setState({\n          keystoreMsg: \"Password doesn't match.\"\n        });\n      }\n    };\n\n    this.getWallet = () => {\n      if (caver.klay.accounts.wallet.length) {\n        return caver.klay.accounts.wallet[0];\n      }\n    };\n\n    this.integrateWallet = privateKey => {\n      var walletInstance = caver.klay.accounts.privateKeyToAccount(privateKey);\n      caver.klay.accounts.wallet.add(walletInstance);\n      sessionStorage.setItem('walletInstance', JSON.stringify(walletInstance));\n      this.reset();\n    };\n\n    this.removeWallet = () => {\n      caver.klay.accounts.wallet.clear();\n      sessionStorage.removeItem('walletInstance');\n      this.reset();\n    };\n\n    this.toggleAccessType = () => {\n      var accessType = this.state.accessType;\n      this.setState({\n        accessType: accessType === 'privateKey' ? 'keystore' : 'privateKey'\n      }, this.reset);\n    };\n\n    this.state = {\n      collapseOpen: false,\n      color: \"navbar-transparent\",\n      accessType: 'keystore',\n      // || 'privateKey'\n      keystore: '',\n      keystoreMsg: '',\n      password: '',\n      privateKey: ''\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.changeColor);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.changeColor);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Navbar, {\n      className: \"fixed-top \" + this.state.color,\n      \"color-on-scroll\": \"100\",\n      expand: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-translate\",\n          children: [/*#__PURE__*/_jsxDEV(NavbarBrand, {\n            to: \"/\",\n            id: \"navbar-brand\",\n            tag: Link,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"CRYPTOBERRY\\u2022 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), \"new\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            \"aria-expanded\": this.state.collapseOpen,\n            className: \"navbar-toggler navbar-toggler\",\n            onClick: this.toggleCollapse,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"navbar-toggler-bar bar1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"navbar-toggler-bar bar2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"navbar-toggler-bar bar3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          className: \"justify-content-end \" + this.state.collapseOut,\n          navbar: true,\n          isOpen: this.state.collapseOpen,\n          onExiting: this.onCollapseExiting,\n          onExited: this.onCollapseExited,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbar-collapse-header\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                className: \"collapse-brand\",\n                xs: \"6\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#pablo\",\n                  onClick: e => e.preventDefault(),\n                  children: \"BLK\\u2022React\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"collapse-close text-right\",\n                xs: \"6\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  \"aria-expanded\": this.state.collapseOpen,\n                  className: \"navbar-toggler\",\n                  onClick: this.toggleCollapse,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"tim-icons icon-simple-remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav, {\n            navbar: true,\n            style: {\n              paddingRight: '100px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(NavItem, {\n              className: \"p-0\",\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                tag: Link,\n                to: \"/register-page\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"New Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              className: \"p-0\",\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                tag: Link,\n                to: \"/landing-page\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Old Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"success\",\n              onClick: () => this.toggleModal(\"formModal\"),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              modalClassName: \"modal-black\",\n              isOpen: this.state.formModal,\n              toggle: () => this.toggleModal(\"formModal\"),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-header justify-content-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"close\",\n                  onClick: () => this.toggleModal(\"formModal\"),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"tim-icons icon-simple-remove text-white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-muted text-center ml-auto mr-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"Sign in \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn-wrapper text-center\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  role: \"form\",\n                  children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: classnames(\"input-group-alternative\", {\n                        \"input-group-focus\": this.state.emailFocus\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                        addonType: \"prepend\",\n                        children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"tim-icons icon-email-85\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 294,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 293,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"Keystore\",\n                        type: \"file\",\n                        onChange: this.handleImport,\n                        accept: \".json\",\n                        onFocus: e => this.setState({\n                          emailFocus: true\n                        }),\n                        onBlur: e => this.setState({\n                          emailFocus: false\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 297,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: classnames(\"input-group-alternative\", {\n                        \"input-group-focus\": this.state.passwordFocus\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                        addonType: \"prepend\",\n                        children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"tim-icons icon-key-25\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 314,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 313,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"Password\",\n                        type: \"password\",\n                        onFocus: e => this.setState({\n                          passwordFocus: true\n                        }),\n                        onBlur: e => this.setState({\n                          passwordFocus: false\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    check: true,\n                    className: \"mt-3\",\n                    children: /*#__PURE__*/_jsxDEV(Label, {\n                      check: true,\n                      children: [/*#__PURE__*/_jsxDEV(Input, {\n                        defaultChecked: true,\n                        type: \"checkbox\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 328,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"form-check-sign\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 23\n                      }, this), \"Remember me!\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"my-4\",\n                      color: \"primary\",\n                      type: \"button\",\n                      children: \"Sign in\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PagesNavbar;","map":{"version":3,"sources":["C:/Users/MONK/Desktop/Cryptoberry(db)/client/src/components/Navbars/ExamplesNavbar.js"],"names":["React","Link","classnames","caver","Button","Collapse","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","NavbarBrand","Navbar","NavItem","NavLink","Nav","Container","Row","Col","UncontrolledTooltip","FormGroup","UncontrolledPopover","PopoverBody","PopoverHeader","Modal","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Label","UncontrolledCarousel","PagesNavbar","Component","constructor","props","changeColor","document","documentElement","scrollTop","body","setState","color","toggleCollapse","classList","toggle","collapseOpen","state","onCollapseExiting","collapseOut","onCollapseExited","scrollToDownload","getElementById","scrollIntoView","behavior","toggleModal","modalState","reset","keystore","privateKey","password","keystoreMsg","handleImport","e","target","files","fileReader","FileReader","onload","checkValidKeystore","result","keystoreName","name","querySelector","focus","readAsText","parsedKeystore","JSON","parse","isValidKeystore","version","id","address","crypto","handleLogin","accessType","integrateWallet","klay","accounts","decrypt","privateKeyFromKeystore","getWallet","wallet","length","walletInstance","privateKeyToAccount","add","sessionStorage","setItem","stringify","removeWallet","clear","removeItem","toggleAccessType","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","preventDefault","paddingRight","formModal","emailFocus","passwordFocus"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {caver} from \"caver-js\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  UncontrolledTooltip,\r\n  FormGroup,\r\n  UncontrolledPopover,\r\n  PopoverBody,\r\n  PopoverHeader,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Label,\r\n  UncontrolledCarousel\r\n} from \"reactstrap\";\r\n\r\nclass PagesNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapseOpen: false,\r\n      color: \"navbar-transparent\",\r\n      accessType: 'keystore', // || 'privateKey'\r\n      keystore: '',\r\n      keystoreMsg: '',\r\n      password: '',\r\n      privateKey: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.changeColor);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.changeColor);\r\n  }\r\n  changeColor = () => {\r\n    if (\r\n      document.documentElement.scrollTop > 99 ||\r\n      document.body.scrollTop > 99\r\n    ) {\r\n      this.setState({\r\n        color: \"bg-info\"\r\n      });\r\n    } else if (\r\n      document.documentElement.scrollTop < 100 ||\r\n      document.body.scrollTop < 100\r\n    ) {\r\n      this.setState({\r\n        color: \"navbar-transparent\"\r\n      });\r\n    }\r\n  };\r\n  toggleCollapse = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    this.setState({\r\n      collapseOpen: !this.state.collapseOpen\r\n    });\r\n  };\r\n  onCollapseExiting = () => {\r\n    this.setState({\r\n      collapseOut: \"collapsing-out\"\r\n    });\r\n  };\r\n  onCollapseExited = () => {\r\n    this.setState({\r\n      collapseOut: \"\"\r\n    });\r\n  };\r\n  scrollToDownload = () => {\r\n    document\r\n      .getElementById(\"download-section\")\r\n      .scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  toggleModal = modalState => {\r\n    this.setState({\r\n      [modalState]: !this.state[modalState]\r\n    });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      keystore: '',\r\n      privateKey: '',\r\n      password: '',\r\n      keystoreMsg: '',\r\n      \r\n    })\r\n  }\r\n\r\n  handleImport = (e) => {\r\n    const keystore = e.target.files[0]\r\n    const fileReader = new FileReader()\r\n    fileReader.onload = (e) => {\r\n      try {\r\n        if (!this.checkValidKeystore(e.target.result)) {\r\n          this.setState({ keystoreMsg: 'Invalid keystore file.' })\r\n          return\r\n        }\r\n        this.setState({\r\n          keystore: e.target.result,\r\n          keystoreMsg: 'It is valid keystore. input your password.',\r\n          keystoreName: keystore.name,\r\n        }, () => document.querySelector('#input-password').focus())\r\n      } catch (e) {\r\n        this.setState({ keystoreMsg: 'Invalid keystore file.' })\r\n        return\r\n      }\r\n    }\r\n    fileReader.readAsText(keystore)\r\n  }\r\n\r\n  checkValidKeystore = (keystore) => {\r\n    const parsedKeystore = JSON.parse(keystore)\r\n\r\n    const isValidKeystore = parsedKeystore.version &&\r\n      parsedKeystore.id &&\r\n      parsedKeystore.address &&\r\n      parsedKeystore.crypto\r\n\r\n    return isValidKeystore\r\n  }\r\n\r\n  handleLogin = () => {\r\n    const { accessType, keystore, password, privateKey } = this.state\r\n\r\n    if (accessType == 'privateKey') {\r\n      this.integrateWallet(privateKey)\r\n      return\r\n    }\r\n\r\n    try {\r\n      const { privateKey: privateKeyFromKeystore } = caver.klay.accounts.decrypt(keystore, password)\r\n      this.integrateWallet(privateKeyFromKeystore)\r\n    } catch (e) {\r\n      this.setState({ keystoreMsg: `Password doesn't match.` })\r\n    }\r\n  }\r\n\r\n  getWallet = () => {\r\n    if (caver.klay.accounts.wallet.length) {\r\n      return caver.klay.accounts.wallet[0]\r\n    }\r\n  }\r\n\r\n  integrateWallet = (privateKey) => {\r\n    const walletInstance = caver.klay.accounts.privateKeyToAccount(privateKey)\r\n    caver.klay.accounts.wallet.add(walletInstance)\r\n    sessionStorage.setItem('walletInstance', JSON.stringify(walletInstance))\r\n    this.reset()\r\n  }\r\n\r\n  removeWallet = () => {\r\n    caver.klay.accounts.wallet.clear()\r\n    sessionStorage.removeItem('walletInstance')\r\n    this.reset()\r\n  }\r\n\r\n  toggleAccessType = () => {\r\n    const { accessType } = this.state\r\n    this.setState({\r\n      accessType: accessType === 'privateKey' ? 'keystore' : 'privateKey'\r\n    }, this.reset)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Navbar\r\n        className={\"fixed-top \" + this.state.color}\r\n        color-on-scroll=\"100\"\r\n        expand=\"lg\"\r\n      >\r\n        <Container>\r\n          <div className=\"navbar-translate\">\r\n            <NavbarBrand\r\n              to=\"/\"\r\n              id=\"navbar-brand\"\r\n              tag={Link}\r\n            >\r\n              <span>CRYPTOBERRY• </span>\r\n              new\r\n            </NavbarBrand>\r\n\r\n            <button\r\n              aria-expanded={this.state.collapseOpen}\r\n              className=\"navbar-toggler navbar-toggler\"\r\n              onClick={this.toggleCollapse}\r\n            >\r\n              <span className=\"navbar-toggler-bar bar1\" />\r\n              <span className=\"navbar-toggler-bar bar2\" />\r\n              <span className=\"navbar-toggler-bar bar3\" />\r\n            </button>\r\n          </div>\r\n          <Collapse\r\n            className={\"justify-content-end \" + this.state.collapseOut}\r\n            navbar\r\n            isOpen={this.state.collapseOpen}\r\n            onExiting={this.onCollapseExiting}\r\n            onExited={this.onCollapseExited}\r\n          >\r\n            <div className=\"navbar-collapse-header\">\r\n              <Row>\r\n                <Col className=\"collapse-brand\" xs=\"6\">\r\n                  <a href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                    BLK•React\r\n                  </a>\r\n                </Col>\r\n                <Col className=\"collapse-close text-right\" xs=\"6\">\r\n                  <button\r\n                    aria-expanded={this.state.collapseOpen}\r\n                    className=\"navbar-toggler\"\r\n                    onClick={this.toggleCollapse}\r\n                  >\r\n                    <i className=\"tim-icons icon-simple-remove\" />\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n            <Nav navbar style={{ paddingRight: '100px' }}>\r\n              <NavItem className=\"p-0\">\r\n              <NavLink\r\n                  tag={Link} to=\"/register-page\">\r\n                  \r\n                  <p>New Product</p>\r\n                </NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem className=\"p-0\">\r\n              <NavLink\r\n                  tag={Link} to=\"/landing-page\"\r\n                  >\r\n                  \r\n                  <p>Old Product</p>\r\n                </NavLink>\r\n              </NavItem>\r\n              \r\n              <Button\r\n                color=\"success\"\r\n                onClick={() => this.toggleModal(\"formModal\")}\r\n              >\r\n                Login\r\n              </Button>\r\n\r\n              <Modal\r\n              modalClassName=\"modal-black\"\r\n              isOpen={this.state.formModal}\r\n              toggle={() => this.toggleModal(\"formModal\")}\r\n            >\r\n              <div className=\"modal-header justify-content-center\">\r\n                <button\r\n                  className=\"close\"\r\n                  onClick={() => this.toggleModal(\"formModal\")}\r\n                >\r\n                  <i className=\"tim-icons icon-simple-remove text-white\" />\r\n                </button>\r\n                <div className=\"text-muted text-center ml-auto mr-auto\">\r\n                  <h3 className=\"mb-0\">Sign in </h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"btn-wrapper text-center\">\r\n                </div>\r\n                <Form role=\"form\">\r\n                  <FormGroup className=\"mb-3\">\r\n                    <InputGroup\r\n                      className={classnames(\"input-group-alternative\", {\r\n                        \"input-group-focus\": this.state.emailFocus\r\n                      })}\r\n                    >\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                          <i className=\"tim-icons icon-email-85\" />\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Keystore\"\r\n                        type=\"file\" onChange={this.handleImport} accept=\".json\"\r\n                        onFocus={e => this.setState({ emailFocus: true })}\r\n                        onBlur={e => this.setState({ emailFocus: false })}\r\n                      />\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <InputGroup\r\n                      className={classnames(\"input-group-alternative\", {\r\n                        \"input-group-focus\": this.state.passwordFocus\r\n                      })}\r\n                    >\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                          <i className=\"tim-icons icon-key-25\" />\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        onFocus={e => this.setState({ passwordFocus: true })}\r\n                        onBlur={e => this.setState({ passwordFocus: false })}\r\n                      />\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                  \r\n                  <FormGroup check className=\"mt-3\">\r\n                    <Label check>\r\n                      <Input defaultChecked type=\"checkbox\" />\r\n                      <span className=\"form-check-sign\" />\r\n                      Remember me!\r\n                    </Label>\r\n                  </FormGroup>\r\n                  <div className=\"text-center\">\r\n                    <Button className=\"my-4\" color=\"primary\" type=\"button\">\r\n                      Sign in\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </Modal>\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PagesNavbar;\r\n"]},"metadata":{},"sourceType":"module"}